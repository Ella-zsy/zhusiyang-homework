<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-cross-origin" />
    
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>DotNet菜园 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=1vhSwkIM_ZbH7FoBJEmvwqf4uVSvVLle9uQMPlPtd_s" />
    

    <link id="MainCss" rel="stylesheet" href="/skins/classicblue/bundle-classicblue.min.css?v=oN1Gjgw_pcYcpf9hSqn1E2dqZhdonVKULIAbH2FpT68" />
        
    
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/classicblue/bundle-classicblue-mobile.min.css?v=ZBWq3OPQpKdP7jvC_UMCkC1a79tQGcXLPZwlftZaLVg" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/chillsrc/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/chillsrc/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/chillsrc/wlwmanifest.xml" />
    <script>
        var currentBlogId = 13897;
        var currentBlogApp = 'chillsrc';
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'ClassicBlue';
        var visitorUserId = '';
        var hasCustomScript = false;
        try {
            if (hasCustomScript && document.referrer && document.referrer.indexOf('baidu.com') >= 0) {
                Object.defineProperty(document, 'referrer', { value: '' });
                Object.defineProperty(Document.prototype, 'referrer', { get: function () { return ''; } });
            }
        } catch (error) { }
        window.cb_enable_mathjax = false;
        window.mathEngine = 0;
        window.codeHighlightEngine = 1;
        window.enableCodeLineNumber = false;
        window.codeHighlightTheme = 'cnblogs';
        window.darkModeCodeHighlightTheme = 'vs2015';
        window.isDarkCodeHighlightTheme = false;
        window.isDarkModeCodeHighlightThemeDark = true;
        window.isDisableCodeHighlighter = false;
        window.enableCodeThemeTypeFollowSystem = false;
        window.enableMacStyleCodeBlock = false
    </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=QEG6LwSL2qZPG7UFsn5haCBlDMZ9Yzj6bWHw2T_YuXU"></script>
    

    
</head>
<body class="skin-classicblue has-navbar">
    <a name="top"></a>
        <div id="bannerbar" class="bannerbar-mobile bannerbar-text-mobile formobile">
                <a href="https://www.cnblogs.com/cmt/p/17320765.html" onclick="countCreativeClicks('M2-博客园')">
                    园子的商业化努力-困境求助：开设捐助通道
                </a>                
        </div>
    <div id="top_nav" class="navbar forpc">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding">
                    <a href="https://www.cnblogs.com/" title="开发者的网上家园" role="banner">
                            <img src="//common.cnblogs.com/logo.svg" alt="博客园Logo" />
                    </a>
                </li>
                <li>
                    <a href="/" onclick="countClicks('skin-navbar-sitehome')">首页</a>
                </li>
                <li>
                    <a href="https://news.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-news')">新闻</a>
                </li>
                <li>
                    <a href="https://q.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-q')">博问</a>
                </li>
                    <li><a href="https://www.cnblogs.com/cmt/p/17320765.html" target="_blank">助园</a></li>
                <li>
                    <a href="https://ing.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-ing')">闪存</a>
                </li>
                <li>
                    <a href="https://edu.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-edu')">班级</a>
                </li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search dropdown" action="https://zzk.cnblogs.com/s" method="get" role="search">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="search" tabindex="3" autocomplete="off" />
                        <button id="zzk_search_button" onclick="window.navbarSearchManager.triggerActiveOption()">
                            <img id="search_icon" class="focus-hidden" src="//common.cnblogs.com/images/blog/search.svg" alt="搜索" />
                            <img class="hidden focus-visible" src="/images/enter.svg" alt="搜索" />
                        </button>
                        <ul id="navbar_search_options" class="dropdown-menu quick-search-menu">
                            <li tabindex="0" class="active" onclick="zzkSearch(event, document.getElementById('zzk_search_input').value)">
                                <div class="keyword-wrapper">
                                    <img src="//common.cnblogs.com/images/blog/search.svg" alt="搜索" />
                                    <div class="keyword"></div>
                                </div>
                                <span class="search-area">所有博客</span>
                            </li>
                                    <li tabindex="1" onclick="zzkBlogSearch(event, 'chillsrc', document.getElementById('zzk_search_input').value)">
                                        <div class="keyword-wrapper">
                                            <img src="//common.cnblogs.com/images/blog/search.svg" alt="搜索" />
                                            <div class="keyword"></div>
                                        </div>
                                        <span class="search-area">当前博客</span>
                                    </li>
                        </ul>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="//common.cnblogs.com/images/blog/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="//common.cnblogs.com/images/blog/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="//common.cnblogs.com/images/blog/message.svg" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <a id="navbar_lite_mode_indicator" data-current-page="blog" style="display: none" href="javascript:void(0)" alt="简洁模式" title="简洁模式启用，您在访问他人博客时会使用简洁款皮肤展示">
                        <img class="navbar-icon" src="//common.cnblogs.com/images/blog/lite-mode-on.svg" alt="简洁模式" />
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="//common.cnblogs.com/images/blog/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    

    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/chillsrc/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/chillsrc/">DotNet菜园</a>
</h1>
<h2>专注所以专业,专业所以专注</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/chillsrc/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/DotNet%E8%8F%9C%E5%9B%AD">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/chillsrc/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		





		
<div class="day pinned" role="article" aria-describedby="postlist_description_12270886">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2020/02/06.html"></a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle pinned-post" href="https://www.cnblogs.com/chillsrc/p/12270886.html">
    <span>
            <span class="pinned-post-mark">[置顶]</span>
        《ASP.NET Core应用开发入门教程》与《ASP.NET Core 应用开发项目实战》正式出版
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_12270886">
摘要：            
<img src="https://images.cnblogs.com/cnblogs_com/chillsrc/1643007/o_200206124740ASP.NET_Core_heji-800x800px.png" class="desc_img">《ASP.NET Core应用开发入门教程》与《ASP.NET Core 应用开发项目实战》于2020年1月正式出版。本书的特点，我觉得注重实践：“实践出真知”，不断地在具体应用中进行实践是学习ASP.NET Core相关的知识，实践是进行学习的最有效的手段。通过将所学的ASP.NET Core 知识应用到一个真正的应用之中，才能确保我们掌握的知识的正确性。实践不但可以巩固我们的所学，还会让我们意识到不足。《ASP.NET Core应用开发入门教程》和《ASP.NET Core 应用开发项目实战》在每一章节都会提供一系列的实例，供读者进行实践。
        <a href="https://www.cnblogs.com/chillsrc/p/12270886.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-02-06 21:08
DotNet菜园
<span data-post-id="12270886" class="post-view-count">阅读(2424)</span> 
<span data-post-id="12270886" class="post-comment-count">评论(11)</span> 
<span data-post-id="12270886" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12270886" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day pinned" role="article" aria-describedby="postlist_description_11231284">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2019/07/30.html"></a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle pinned-post" href="https://www.cnblogs.com/chillsrc/p/11231284.html">
    <span>
            <span class="pinned-post-mark">[置顶]</span>
        abp(net core)+easyui+efcore实现仓储管理系统目录 
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_11231284">
摘要：            
abp(net core)+easyui+efcore实现仓储管理系统目录        <a href="https://www.cnblogs.com/chillsrc/p/11231284.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2019-07-30 14:18
DotNet菜园
<span data-post-id="11231284" class="post-view-count">阅读(12247)</span> 
<span data-post-id="11231284" class="post-comment-count">评论(5)</span> 
<span data-post-id="11231284" class="post-digg-count">推荐(19)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11231284" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17346299">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/04/23.html">2023年4月23日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17346299.html">
    <span>
         abp(net core)+easyui+efcore实现仓储管理系统——组织管理升级之下(六十二) 
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17346299">
摘要：            
在前面的文章中我们已经将abp(net core)+easyui+efcore实现的仓储管理系统升级到ABP7.3，今天我们对组织管理功能进行升级，并解决升级过后的一些问题。        <a href="https://www.cnblogs.com/chillsrc/p/17346299.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-04-23 13:34
DotNet菜园
<span data-post-id="17346299" class="post-view-count">阅读(48)</span> 
<span data-post-id="17346299" class="post-comment-count">评论(0)</span> 
<span data-post-id="17346299" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17346299" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17323288">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/04/16.html">2023年4月16日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17323288.html">
    <span>
         abp(net core)+easyui+efcore实现仓储管理系统——组织管理升级之上(六十一)
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17323288">
摘要：            
在前面的文章中我们已经将abp(net core)+easyui+efcore实现的仓储管理系统升级到ABP7.3，今天我们对组织管理功能进行升级，并解决升级过后的一些问题。        <a href="https://www.cnblogs.com/chillsrc/p/17323288.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-04-16 14:47
DotNet菜园
<span data-post-id="17323288" class="post-view-count">阅读(278)</span> 
<span data-post-id="17323288" class="post-comment-count">评论(0)</span> 
<span data-post-id="17323288" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17323288" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17300643">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/04/09.html">2023年4月9日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17300643.html">
    <span>
         abp(net core)+easyui+efcore实现仓储管理系统——模块管理升级(六十)
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17300643">
摘要：            
在前面的文章中我们已经将abp(net core)+easyui+efcore实现的仓储管理系统升级到ABP7.3，今天我们测试升级之后的模块管理功能，并解决升级过后的一些问题。        <a href="https://www.cnblogs.com/chillsrc/p/17300643.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-04-09 17:26
DotNet菜园
<span data-post-id="17300643" class="post-view-count">阅读(286)</span> 
<span data-post-id="17300643" class="post-comment-count">评论(0)</span> 
<span data-post-id="17300643" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17300643" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17279290">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/04/01.html">2023年4月1日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17279290.html">
    <span>
         abp(net core)+easyui+efcore实现仓储管理系统——ABP升级7.3下(五十九) 
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17279290">
摘要：            
从2019年5月至2020年12月，花了一年半时间写了abp(net core)+easyui+efcore实现仓储管理系统系列文章。本系列是介绍基于ABP+EasyUI的Web开发框架的实现一个仓储管理系统的实例，主要包括一些ABP的介绍，ASP.NET MVC Core技术、EasyUI技术、JQuery技术、WebAPI 技术，以及一些我对整体框架改造的基础性东西，力求更加稳定、通用、高效、简洁，用最少的代码做尽可能多的事情。当时我所使用的ABP版本是4.3，是基于ASP.NET CORE 2.X的版本。
        2年时间过去了，ASP.NTE CORE 2.x微软已经不在对其进行支持，已经结束了支持周期。我准备将ABP升级到7.3，这是基于NET6的一个版本，NET6是一个长期支持版本，其支持周期结束时间在2024年11月份。easyui升级到1.10.12。        <a href="https://www.cnblogs.com/chillsrc/p/17279290.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-04-01 20:28
DotNet菜园
<span data-post-id="17279290" class="post-view-count">阅读(506)</span> 
<span data-post-id="17279290" class="post-comment-count">评论(2)</span> 
<span data-post-id="17279290" class="post-digg-count">推荐(5)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17279290" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17258437">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/03/26.html">2023年3月26日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17258437.html">
    <span>
        abp(net core)+easyui+efcore实现仓储管理系统——ABP升级7.3上(五十八) 
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17258437">
摘要：            
从2019年5月至2020年12月，花了一年半时间写了abp(net core)+easyui+efcore实现仓储管理系统系列文章。本系列是介绍基于ABP+EasyUI的Web开发框架的实现一个仓储管理系统的实例，主要包括一些ABP的介绍，ASP.NET MVC Core技术、EasyUI技术、JQuery技术、WebAPI 技术，以及一些我对整体框架改造的基础性东西，力求更加稳定、通用、高效、简洁，用最少的代码做尽可能多的事情。当时我所使用的ABP版本是4.3，是基于ASP.NET CORE 2.X的版本。
        2年时间过去了，ASP.NTE CORE 2.x微软已经不在对其进行支持，已经结束了支持周期。我准备将ABP升级到7.3，这是基于NET6的一个版本，NET6是一个长期支持版本，其支持周期结束时间在2024年11月份。easyui升级到1.10.12。升级过程中遇到的问题，及解决问题的方法。        <a href="https://www.cnblogs.com/chillsrc/p/17258437.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-03-26 12:20
DotNet菜园
<span data-post-id="17258437" class="post-view-count">阅读(543)</span> 
<span data-post-id="17258437" class="post-comment-count">评论(1)</span> 
<span data-post-id="17258437" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17258437" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17232979">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/03/19.html">2023年3月19日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17232979.html">
    <span>
         学习ASP.NET Core Blazor编程系列三十——JWT登录（4） 
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17232979">
摘要：            
JWT只是缩写，全称则是JSON Web Tokens，是目前流行的跨域认证解决方案，是基于开放标准RFC7519，提供一种身份认证与信息交换的解决方案，是一种基于JSON的用于在网络上声明某种主张的令牌（token）。今天的文章使用API接口来实现使用JWT登出功能。        <a href="https://www.cnblogs.com/chillsrc/p/17232979.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-03-19 14:04
DotNet菜园
<span data-post-id="17232979" class="post-view-count">阅读(336)</span> 
<span data-post-id="17232979" class="post-comment-count">评论(0)</span> 
<span data-post-id="17232979" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17232979" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17207969">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/03/12.html">2023年3月12日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17207969.html">
    <span>
         学习ASP.NET Core Blazor编程系列二十九——JWT登录（3） 
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17207969">
摘要：            
JWT只是缩写，全称则是JSON Web Tokens，是目前流行的跨域认证解决方案，是基于开放标准RFC7519，提供一种身份认证与信息交换的解决方案，是一种基于JSON的用于在网络上声明某种主张的令牌（token）。今天的文章使用API接口来实现使用JWT登录功能。        <a href="https://www.cnblogs.com/chillsrc/p/17207969.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-03-12 12:24
DotNet菜园
<span data-post-id="17207969" class="post-view-count">阅读(585)</span> 
<span data-post-id="17207969" class="post-comment-count">评论(1)</span> 
<span data-post-id="17207969" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17207969" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17181281">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/03/05.html">2023年3月5日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17181281.html">
    <span>
         学习ASP.NET Core Blazor编程系列二十八——JWT登录（2） 
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17181281">
摘要：            
JWT只是缩写，全称则是JSON Web Tokens，是目前流行的跨域认证解决方案，是基于开放标准RFC7519，提供一种身份认证与信息交换的解决方案，是一种基于JSON的用于在网络上声明某种主张的令牌（token）。
      通俗地说，JWT的本质就是一个字符串，它是将用户信息保存到一个Json字符串中，然后进行编码后得到一个JWT token，并且这个JWT token带有签名信息，接收后可以校验是否被篡改，所以可以用于在各方之间安全地将信息作为Json对象传输。        <a href="https://www.cnblogs.com/chillsrc/p/17181281.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-03-05 18:40
DotNet菜园
<span data-post-id="17181281" class="post-view-count">阅读(574)</span> 
<span data-post-id="17181281" class="post-comment-count">评论(0)</span> 
<span data-post-id="17181281" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17181281" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17156513">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/02/26.html">2023年2月26日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17156513.html">
    <span>
         学习ASP.NET Core Blazor编程系列二十七——JWT登录（1） 
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17156513">
摘要：            
JWT只是缩写，全称则是JSON Web Tokens，是目前流行的跨域认证解决方案，是基于开放标准RFC7519，提供一种身份认证与信息交换的解决方案，是一种基于JSON的用于在网络上声明某种主张的令牌（token）。

      由于http的连接是状态的特性，server端和client是不会记住每个请求是谁发过来的，也不会知道当前发送请求的用户是否已经对过身份认证，如果用户的每一个请求，都要与数据库通讯进行身份认证，会增加server和数据库的成本。因此，之前的Web应用一般都会用session或 cookie的方式解決。

      通俗地说，JWT的本质就是一个字符串，它是将用户信息保存到一个Json字符串中，然后进行编码后得到一个JWT token，并且这个JWT token带有签名信息，接收后可以校验是否被篡改，所以可以用于在各方之间安全地将信息作为Json对象传输。        <a href="https://www.cnblogs.com/chillsrc/p/17156513.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-02-26 13:01
DotNet菜园
<span data-post-id="17156513" class="post-view-count">阅读(547)</span> 
<span data-post-id="17156513" class="post-comment-count">评论(1)</span> 
<span data-post-id="17156513" class="post-digg-count">推荐(3)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17156513" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17135448">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/02/19.html">2023年2月19日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17135448.html">
    <span>
         学习ASP.NET Core Blazor编程系列二十六——登录（5） 
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17135448">
摘要：            
登录的本质原理同网页应用是一样的，一般的流程是：用户打开登页--》输入账号密码后提交表单--》服务端验证成功后生成cookie信息写入浏览器--》之后用户访问页面时浏览器会带上此cookie信息作为用户标识--》服务端解析此cookie信息就能识别这个用户了。

      在webapi出现之后，出现了JWT这样的认证方式，原理大同小异，相同的是， 认证信息都是保存在请求头中传递的，不同是JWT中的认证信息需要编码写入请求头之后再发送请求，不像浏览器，发送请求时会自动带上cookie信息，不需要编码。        <a href="https://www.cnblogs.com/chillsrc/p/17135448.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-02-19 19:53
DotNet菜园
<span data-post-id="17135448" class="post-view-count">阅读(685)</span> 
<span data-post-id="17135448" class="post-comment-count">评论(0)</span> 
<span data-post-id="17135448" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17135448" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17113633">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/02/12.html">2023年2月12日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17113633.html">
    <span>
         学习ASP.NET Core Blazor编程系列二十五——登录（4）
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17113633">
摘要：            
通过前面三篇文章的学习，我们虽然实现了登录功能，但那还不是我们希望的登录首页。

我们希望的登录功能，用户在登录图书租赁系统的时候，如果没有进行登录是无法看到任何功能菜单，并且页面一直显示登录页面。        <a href="https://www.cnblogs.com/chillsrc/p/17113633.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-02-12 12:12
DotNet菜园
<span data-post-id="17113633" class="post-view-count">阅读(543)</span> 
<span data-post-id="17113633" class="post-comment-count">评论(1)</span> 
<span data-post-id="17113633" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17113633" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17093077">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/02/05.html">2023年2月5日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17093077.html">
    <span>
         学习ASP.NET Core Blazor编程系列二十四——登录（3）
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17093077">
摘要：            
虽然在上一篇文章(学习ASP.NET Core Blazor编程系列二十三——登录（2） )中我们制作出了登录页面，但那个登录页面，不符合我们平时使用的样式，需要进行修改，同时也没有实现登录验证。这一文章学习如何对Login.razor使用特有的布局组件，实现正常的登录样式，学习使用AuthenticationStateProvider类来进行登录验证。        <a href="https://www.cnblogs.com/chillsrc/p/17093077.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-02-05 11:27
DotNet菜园
<span data-post-id="17093077" class="post-view-count">阅读(613)</span> 
<span data-post-id="17093077" class="post-comment-count">评论(0)</span> 
<span data-post-id="17093077" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17093077" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17072109">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/01/29.html">2023年1月29日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17072109.html">
    <span>
         学习ASP.NET Core Blazor编程系列二十三——登录（2） 
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17072109">
摘要：            
通过前面的ASP.NET Core Blazor编程系列文章为读者介绍了Blazor及组件的相关基础概念，以及我们已经实现了用Blazor实现对数据的增删改查这四大基本功能，通过这些功能的实现我们已经能用Blazor处理一些简单的实际问题，特别是企业内部信息管理系统的相关问题。 前面的ASP.NET Core Blazor编程系列文章中却没有讲到信息管理系统中一个最基本功能——登录。通过查询微软官网上的文档，我们知道目前Blazor没有内置的密码输入组件，这个用于输入密码的组件需要我们来自己实现。接下来我们就来实现密码输入组件功能。        <a href="https://www.cnblogs.com/chillsrc/p/17072109.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-01-29 11:10
DotNet菜园
<span data-post-id="17072109" class="post-view-count">阅读(764)</span> 
<span data-post-id="17072109" class="post-comment-count">评论(0)</span> 
<span data-post-id="17072109" class="post-digg-count">推荐(3)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17072109" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17067148">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/01/25.html">2023年1月25日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17067148.html">
    <span>
         学习ASP.NET Core Blazor编程系列二十二——登录（1）
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17067148">
摘要：            
通过前面的ASP.NET Core Blazor编程系列文章为读者介绍了Blazor及组件的相关基础概念，以及我们已经实现了用Blazor实现对数据的增删改查这四大基本功能，以及文件上传的功能，通过这些功能的实现我们已经能用Blazor处理一些简单的实际问题，特别是企业内部信息管理系统的相关问题。

     前面的ASP.NET Core Blazor编程系列文章中却没有讲到信息管理系统中一个最基本功能——登录，有关登录功能的介绍

     通过搜索引擎你可以搜索到很多关于如何基于Blazor开发登录页面的文章，不过大部分的Blazor登录示例是往往给出的是Identity Server的例子，包括微软自己的文档网站上的示例。        <a href="https://www.cnblogs.com/chillsrc/p/17067148.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-01-25 18:59
DotNet菜园
<span data-post-id="17067148" class="post-view-count">阅读(912)</span> 
<span data-post-id="17067148" class="post-comment-count">评论(0)</span> 
<span data-post-id="17067148" class="post-digg-count">推荐(3)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17067148" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17054020">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/01/15.html">2023年1月15日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17054020.html">
    <span>
         学习ASP.NET Core Blazor编程系列二十一——数据刷新 
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17054020">
摘要：            
第二个问题，就是数据刷新问题，这不仅仅是上传中会碰到，只要是用数据列表或表格呈现数据，都可能会碰到没有及时刷新，数据不是最新的这个问题。Blazor 绑定（绑定就是刷新）机制有三种，Blazor组件在第一次渲染完成之后，ShouldRender 会返回为 false，然后后面调用都返回 false，对于任意一个组件，若出现没刷新的情况下，请考虑这个因素。
那么，如何让Blazor组件进行刷新呢？方法很简单，手动调用该组件的StateHasChanged 方法，然后绑定数据。        <a href="https://www.cnblogs.com/chillsrc/p/17054020.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-01-15 19:45
DotNet菜园
<span data-post-id="17054020" class="post-view-count">阅读(813)</span> 
<span data-post-id="17054020" class="post-comment-count">评论(1)</span> 
<span data-post-id="17054020" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17054020" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17034603">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/01/08.html">2023年1月8日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17034603.html">
    <span>
         学习ASP.NET Core Blazor编程系列二十——文件上传（完） 
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17034603">
摘要：            
我们通过前面的二篇文章的学习，已经实现了文件上传功能之中的上传文件功用，将文件信息保存到数据库的功能，以及删除文件功能。我们已经实现的文件上传功能，还存在着两个问题。

第一个问题，在删除上传文件信息时，没有任何时间，用户在删除时，并不知道自己要不要删除，没有让用户再次确认。        <a href="https://www.cnblogs.com/chillsrc/p/17034603.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-01-08 13:53
DotNet菜园
<span data-post-id="17034603" class="post-view-count">阅读(620)</span> 
<span data-post-id="17034603" class="post-comment-count">评论(0)</span> 
<span data-post-id="17034603" class="post-digg-count">推荐(4)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17034603" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17019604">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/01/02.html">2023年1月2日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17019604.html">
    <span>
         学习ASP.NET Core Blazor编程系列十九——文件上传（下） 
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17019604">
摘要：            
我们在“多文件上传示例”页面中选择一个上传文件，然后应用程序会自动上传文件，并会在数据库中记录了一上传文件的相关信息，并会在页面中显示一个已经上传的文件列表。        <a href="https://www.cnblogs.com/chillsrc/p/17019604.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-01-02 11:02
DotNet菜园
<span data-post-id="17019604" class="post-view-count">阅读(588)</span> 
<span data-post-id="17019604" class="post-comment-count">评论(2)</span> 
<span data-post-id="17019604" class="post-digg-count">推荐(7)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17019604" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_17018005">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2023/01/01.html">2023年1月1日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/17018005.html">
    <span>
         学习ASP.NET Core Blazor编程系列十八——文件上传（中） 
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_17018005">
摘要：            
上篇学习ASP.NET Core Blazor编程系列十七——文件上传（上）文章我们学习了如何将文件上传至服务器，但是我们并没有将文件的一些信息保存下来，无法进行查询，无法得知我们上传了一些什么文件。本篇文章演示如何将上传文件的一些基本信息保存到数据库，从而可以对上传文件进行简单管理。        <a href="https://www.cnblogs.com/chillsrc/p/17018005.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2023-01-01 13:31
DotNet菜园
<span data-post-id="17018005" class="post-view-count">阅读(363)</span> 
<span data-post-id="17018005" class="post-comment-count">评论(0)</span> 
<span data-post-id="17018005" class="post-digg-count">推荐(4)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17018005" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_16990664">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2022/12/18.html">2022年12月18日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/16990664.html">
    <span>
         学习ASP.NET Core Blazor编程系列十七——文件上传（上）
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_16990664">
摘要：            
从本篇文章开始我们来讲在图书租赁系统中如何使用内置的文件上传组件进行文件上传功能的开发。本文的示例适合上传小型文件。本篇文章演示如何通过Blazor的内置组件InputFile将文件上传至服务器。        <a href="https://www.cnblogs.com/chillsrc/p/16990664.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2022-12-18 17:35
DotNet菜园
<span data-post-id="16990664" class="post-view-count">阅读(617)</span> 
<span data-post-id="16990664" class="post-comment-count">评论(1)</span> 
<span data-post-id="16990664" class="post-digg-count">推荐(3)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=16990664" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		
<div class="day" role="article" aria-describedby="postlist_description_16972978">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/chillsrc/archive/2022/12/11.html">2022年12月11日
</a>
    </div>

        <div class="postTitle" role="heading" aria-level="2">
            <a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/16972978.html">
    <span>
         学习ASP.NET Core Blazor编程系列十六——排序 
    </span>
    
</a>
        </div>
        <div class="postCon">

    <div class="c_b_p_desc" id="postlist_description_16972978">
摘要：            
在本篇文章我们来学习如何进行对列表按标题进行排序。

      通过前面的教程学习，你可以实现一个简单的书籍管理系统。 在本教程将向图书列表页面中添加排序功能。        <a href="https://www.cnblogs.com/chillsrc/p/16972978.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2022-12-11 11:16
DotNet菜园
<span data-post-id="16972978" class="post-view-count">阅读(502)</span> 
<span data-post-id="16972978" class="post-comment-count">评论(1)</span> 
<span data-post-id="16972978" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=16972978" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    <a href="https://www.cnblogs.com/chillsrc/?page=2">
        下一页
    </a>

    </div>    
</div>






<script>
    updatePostStats(
        $(".post-view-count").map(function () { return this.dataset.postId }).get(),
        function(id, count) { $(".post-view-count[data-post-id=" + id + "]").text("阅读(" + count + ")") },
        function(id, count) { $(".post-comment-count[data-post-id=" + id + "]").text("评论(" + count + ")") },
        function(id, count) { $(".post-digg-count[data-post-id=" + id + "]").text("推荐(" + count + ")") });
</script>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
    <h3 class="catListTitle">公告</h3>
<div id="blog-news">    
    <div id="sidebar_news_content">
    </div>
</div>
<script>loadBlogNews();</script>

 
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2023 DotNet菜园
<br /><span id="poweredby">Powered by .NET 7.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->



    

    <input type="hidden" id="antiforgery_token" value="CfDJ8M-opqJn5c1MsCC_BxLIULmnBJuuCxrs3PKpP9bKywiMafjtqd_PC42Cucqieip1uYIt-iBfKaaQRf6bVKtkSIR8s3ulESaD1QghN9DKZaZuupE_tekx2_kCVZPT0SFtz0UWKRmOKqxV-Pae_ZnNEW8" />
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-476124-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    var kv = getGACustom();
    if (kv) {
        gtag('set', kv);
    }
    gtag('config', 'UA-476124-1');
</script>
<script defer src="https://hm.baidu.com/hm.js?866c9be12d4a814454792b1fd0fed295"></script>
</body>
</html>