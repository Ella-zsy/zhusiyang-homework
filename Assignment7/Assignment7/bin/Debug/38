<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-cross-origin" />
    <meta name="description" content="@(文件和目录操作命令) 前言 这期呢主要说一说Linux中文件与目录相关的命令，一共包含19个命令 cd 切换目录 1、简介 cd 是“change directory” 中每个单词的首字母，其功能" />
    <meta property="og:description" content="@(文件和目录操作命令) 前言 这期呢主要说一说Linux中文件与目录相关的命令，一共包含19个命令 cd 切换目录 1、简介 cd 是“change directory” 中每个单词的首字母，其功能" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>快速上手Linux核心命令（三）：文件和目录操作命令 - xiezhr - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=1vhSwkIM_ZbH7FoBJEmvwqf4uVSvVLle9uQMPlPtd_s" />
    

    <link id="MainCss" rel="stylesheet" href="/skins/simpleblue/bundle-simpleblue.min.css?v=ujUVW_JvMXug7ScRjVMabg4Kte9V_nbOnCFim9rMqrU" />
        <link id="highlighter-theme-cnblogs" type="text/css" rel="stylesheet" href="/css/hljs/cnblogs.css?v=5J1NDtbnnIr2Rc2SdhEMlMxD4l9Eydj88B31E7_NhS4" />
    
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/simpleblue/bundle-simpleblue-mobile.min.css?v=9elqfWpkg07yuaBsroQiDjUqFYGlVczS86FhR-INmiU" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/xiezhr/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/xiezhr/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/xiezhr/wlwmanifest.xml" />
    <script>
        var currentBlogId = 685650;
        var currentBlogApp = 'xiezhr';
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'SimpleBlue';
        var visitorUserId = '';
        var hasCustomScript = false;
        try {
            if (hasCustomScript && document.referrer && document.referrer.indexOf('baidu.com') >= 0) {
                Object.defineProperty(document, 'referrer', { value: '' });
                Object.defineProperty(Document.prototype, 'referrer', { get: function () { return ''; } });
            }
        } catch (error) { }
        window.cb_enable_mathjax = true;
        window.mathEngine = 1;
        window.codeHighlightEngine = 1;
        window.enableCodeLineNumber = false;
        window.codeHighlightTheme = 'cnblogs';
        window.darkModeCodeHighlightTheme = 'vs2015';
        window.isDarkCodeHighlightTheme = false;
        window.isDarkModeCodeHighlightThemeDark = true;
        window.isDisableCodeHighlighter = false;
        window.enableCodeThemeTypeFollowSystem = false;
        window.enableMacStyleCodeBlock = false
    </script>
        <script>
            var currentPostDateAdded = '2023-04-23 12:52';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=QEG6LwSL2qZPG7UFsn5haCBlDMZ9Yzj6bWHw2T_YuXU"></script>
    

    
</head>
<body class="skin-simpleblue has-navbar mathjax3">
    <a name="top"></a>
        <div id="bannerbar" class="bannerbar-mobile bannerbar-text-mobile formobile">
                <a href="https://www.cnblogs.com/cmt/p/17320765.html" onclick="countCreativeClicks('M2-博客园')">
                    园子的商业化努力-困境求助：开设捐助通道
                </a>                
        </div>
    <div id="top_nav" class="navbar forpc">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding">
                    <a href="https://www.cnblogs.com/" title="开发者的网上家园" role="banner">
                            <img src="//common.cnblogs.com/logo.svg" alt="博客园Logo" />
                    </a>
                </li>
                <li>
                    <a href="/" onclick="countClicks('skin-navbar-sitehome')">首页</a>
                </li>
                <li>
                    <a href="https://news.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-news')">新闻</a>
                </li>
                <li>
                    <a href="https://q.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-q')">博问</a>
                </li>
                    <li><a href="https://www.cnblogs.com/cmt/p/17320765.html" target="_blank">助园</a></li>
                <li>
                    <a href="https://ing.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-ing')">闪存</a>
                </li>
                <li>
                    <a href="https://edu.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-edu')">班级</a>
                </li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search dropdown" action="https://zzk.cnblogs.com/s" method="get" role="search">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="search" tabindex="3" autocomplete="off" />
                        <button id="zzk_search_button" onclick="window.navbarSearchManager.triggerActiveOption()">
                            <img id="search_icon" class="focus-hidden" src="//common.cnblogs.com/images/blog/search.svg" alt="搜索" />
                            <img class="hidden focus-visible" src="/images/enter.svg" alt="搜索" />
                        </button>
                        <ul id="navbar_search_options" class="dropdown-menu quick-search-menu">
                            <li tabindex="0" class="active" onclick="zzkSearch(event, document.getElementById('zzk_search_input').value)">
                                <div class="keyword-wrapper">
                                    <img src="//common.cnblogs.com/images/blog/search.svg" alt="搜索" />
                                    <div class="keyword"></div>
                                </div>
                                <span class="search-area">所有博客</span>
                            </li>
                                    <li tabindex="1" onclick="zzkBlogSearch(event, 'xiezhr', document.getElementById('zzk_search_input').value)">
                                        <div class="keyword-wrapper">
                                            <img src="//common.cnblogs.com/images/blog/search.svg" alt="搜索" />
                                            <div class="keyword"></div>
                                        </div>
                                        <span class="search-area">当前博客</span>
                                    </li>
                        </ul>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="//common.cnblogs.com/images/blog/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="//common.cnblogs.com/images/blog/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="//common.cnblogs.com/images/blog/message.svg" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <a id="navbar_lite_mode_indicator" data-current-page="blog" style="display: none" href="javascript:void(0)" alt="简洁模式" title="简洁模式启用，您在访问他人博客时会使用简洁款皮肤展示">
                        <img class="navbar-icon" src="//common.cnblogs.com/images/blog/lite-mode-on.svg" alt="简洁模式" />
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="//common.cnblogs.com/images/blog/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    

    <div id="home">
    <div id="header">
        <div id="blogTitle">
            <div class="title"><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/xiezhr/">xiezhr</a>
</div>
<div class="subtitle"></div>

        </div>
        <div id="navigator">
            
<ul id="navList">
    <li id="nav_sitehome"><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
    <li id="nav_myhome">
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/xiezhr/">
首页</a>
</li>
    <li id="nav_newpost">

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
    <li id="nav_contact">
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/xiezhr">
联系</a></li>
    <li id="nav_rss">
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/xiezhr/rss/">
订阅</a></li>
    <li id="nav_admin">
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>

            <div class="blogStats">
                <div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
            </div>
        </div>
    </div>
    <div id="main">
        <div id="mainContent">
            <div class="forFlow">
                <div id="post_detail">
    <div id="topics">
        <div class="post">
            <h1 class="postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/xiezhr/p/17343212.html">
    <span role="heading" aria-level="2">快速上手Linux核心命令（三）：文件和目录操作命令</span>
    
</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                <div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
<p>@</p><div class="toc"><div class="toc-container-header">目录</div><ul><li><a href="#前言" rel="noopener">前言</a></li><li><a href="#cd-切换目录" rel="noopener">cd 切换目录</a></li><li><a href="#pwd-显示当前路径" rel="noopener">pwd 显示当前路径</a></li><li><a href="#ls-显示目录下内容及相关属性信息" rel="noopener">ls 显示目录下内容及相关属性信息</a></li><li><a href="#mkdir-创建目录" rel="noopener">mkdir 创建目录</a></li><li><a href="#tree-以树形结构显示目录下的内容" rel="noopener">tree 以树形结构显示目录下的内容</a></li><li><a href="#touch-创建空白文件或改变文件的时间戳属性" rel="noopener">touch 创建空白文件或改变文件的时间戳属性</a></li><li><a href="#cp-复制文件或目录" rel="noopener">cp 复制文件或目录</a></li><li><a href="#mv-移动或重命名文件" rel="noopener">mv 移动或重命名文件</a></li><li><a href="#rm-删除文件或目录" rel="noopener">rm 删除文件或目录</a></li><li><a href="#chown-改变文件或目录的用户用户组" rel="noopener">chown 改变文件或目录的用户用户组</a></li><li><a href="#chmod-改变文件或目录的权限" rel="noopener">chmod 改变文件或目录的权限</a></li><li><a href="#chgrp-更改文件用户组" rel="noopener">chgrp 更改文件用户组</a></li><li><a href="#ln-硬链接与软连接" rel="noopener">ln 硬链接与软连接</a></li><li><a href="#redlink-查看符号连接文件的内容" rel="noopener">redlink 查看符号连接文件的内容</a></li><li><a href="#find-查找目录下的文件" rel="noopener">find 查找目录下的文件</a></li><li><a href="#xargs-将标准输入转换成命令行参数" rel="noopener">xargs 将标准输入转换成命令行参数</a></li><li><a href="#rename-重命名文件" rel="noopener">rename 重命名文件</a></li><li><a href="#file-显示文件类型" rel="noopener">file 显示文件类型</a></li><li><a href="#md5sum-计算和校验文件的md5值" rel="noopener">md5sum 计算和校验文件的MD5值</a></li></ul></div><p></p>
<h3 id="前言">前言</h3>
<p>这期呢主要说一说Linux中文件与目录相关的命令，一共包含19个命令</p>
<p><img src="https://img2023.cnblogs.com/blog/2381533/202304/2381533-20230422153917415-258289401.png" alt="" loading="lazy"></p>
<h3 id="cd-切换目录">cd 切换目录</h3>
<p>1、简介</p>
<p>cd 是“change directory” 中每个单词的首字母，其功能是从当前目录切换到目标路径。</p>
<p>2、语法格式</p>
<pre><code class="language-shell">cd [参数选项] [目标路径]
</code></pre>
<p>3、参数说明</p>
<p>这里呢只列出常用参数</p>
<table>
<thead>
<tr>
<th>参数选项</th>
<th>参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-</td>
<td>从当前目录切换到用户上一次所在目录</td>
</tr>
<tr>
<td>~</td>
<td>从当前目录切换到家目录，即假设当前登录的用户是xiezhr,执行命令后路径将切换到/home/xiezhr</td>
</tr>
<tr>
<td>..</td>
<td>从当前目录切换到上一级目录</td>
</tr>
</tbody>
</table>
<p>在使用cd命令时，配合“<strong>tab</strong>”键的自动补全功能，可以大大提高效率。</p>
<p>既然说到了切换路径，我们这里就说一说什么时<strong>相对路径</strong>？什么时<strong>绝对路径</strong>？</p>
<p>简单来说，从“/”根目录开始的路径为<strong>绝对路径</strong>，不从“/”开始的为<strong>相对路径</strong>。<br>
/home/xiezhr、/home/user/local  是绝对路径，而  date/,webapp/log/ 为相对路径</p>
<p>4、实践操作</p>
<p>① 进入系统 /usr/local 目录 。这里我们会用到<strong>pwd</strong>命令来显示当前所在路径，这个命令我们会在下一个命令中讲，这里知道即可</p>
<pre><code class="language-shell">[root@xiezhr ~]# cd /usr/local/
[root@xiezhr local]# pwd
/usr/local
</code></pre>
<p>② 切换到上级目录</p>
<pre><code class="language-shell">[root@xiezhr local]# pwd
/usr/local
[root@xiezhr local]# cd ..
[root@xiezhr usr]# pwd
/usr
</code></pre>
<p>③ 切换到父目录的父目录</p>
<pre><code class="language-shell">[root@xiezhr local]# pwd
/usr/local
[root@xiezhr local]# cd ../../
[root@xiezhr /]# pwd
/
</code></pre>
<p>④ 返回当前用户上一次所在的目录</p>
<pre><code class="language-shell">[root@xiezhr ~]# cd /usr/local/
[root@xiezhr local]# cd /root/
[root@xiezhr ~]# pwd
/root
[root@xiezhr ~]# cd -
/usr/local
</code></pre>
<p>⑤ 返回家目录【当前用户为root用户，家目录为/root】</p>
<pre><code class="language-shell">[root@xiezhr local]# cd /usr/local/
[root@xiezhr local]# pwd
/usr/local
[root@xiezhr local]# cd ~
[root@xiezhr ~]# pwd
/root
</code></pre>
<h3 id="pwd-显示当前路径">pwd 显示当前路径</h3>
<p>1、简介</p>
<p>pwd 是“<strong>p</strong>rint <strong>w</strong>orking <strong>d</strong>irectory”每个单词的首字母，功能是打印/显示当前所在目录姐绝对路径。在实际工作中，我们经常会在各个目录之间切换，切换的多了，很容易忘记走到哪了，这时就需要有<strong>一幅地图</strong>指引我们，使我们<strong>不至于迷路</strong>。由此可见这个命令的重要性</p>
<p>2、语法格式</p>
<pre><code class="language-shell">pwd [参数选项]
</code></pre>
<p>3、参数说明</p>
<p>一般不需要加参数</p>
<p>4、实践操作</p>
<p>① 进入到/usr/local后显示路径</p>
<pre><code class="language-shell">[root@xiezhr ~]# cd /usr/local/
[root@xiezhr local]# pwd
/usr/local
</code></pre>
<h3 id="ls-显示目录下内容及相关属性信息">ls 显示目录下内容及相关属性信息</h3>
<p>1、简介</p>
<p>ls 是“<strong>l</strong>i<strong>s</strong>t” 英文单词的缩写，功能是列出当前目录下的内容和内容属性信息。类似于DOS系统下的dir命令</p>
<p>2、语法格式</p>
<pre><code class="language-shell">ls [参数选项] [文件或目录]
</code></pre>
<p>由于用的比较少，这里就不作说明了，大概知道就好了</p>
<p>3、参数说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-l</td>
<td>使用长格式列出文件即目录信息 相当于直接使用ll</td>
</tr>
<tr>
<td>-a</td>
<td>显示目录下的所有文件，包括.开头的隐藏文件</td>
</tr>
<tr>
<td>-t</td>
<td>根据最后修改时间（time）排序，默认是按文件名排序的</td>
</tr>
<tr>
<td>-r</td>
<td>以相反次序排序</td>
</tr>
<tr>
<td>-F</td>
<td>在条目后加上文件类型的只是符号（*、/、=、@、|中的一个）</td>
</tr>
<tr>
<td>-d</td>
<td>当遇到目录时，列出目录本身而非目录内文件</td>
</tr>
<tr>
<td>-h</td>
<td>以人类可读信息显示文件或目录大小，如1KB，23M,3GB等</td>
</tr>
</tbody>
</table>
<p>4、实践操作</p>
<p>① 直接使用ls命令，<strong>不带参数</strong>,显示当前目录下的文件和路径</p>
<pre><code class="language-shell">[root@xiezhr test]# ls
a.txt  b.txt  c.txt  dir1  dir2  dir3
</code></pre>
<p>②加上【-a】参数，显示所有文件，包含隐藏文件(<strong>"."开头的为隐藏文件</strong>)，如下所示，ls没有显示隐藏文件，ls -a 显示了隐藏文件.d.txt</p>
<pre><code class="language-shell">[root@xiezhr test]# ls
a.txt  b.txt  c.txt  dir1  dir2  dir3
[root@xiezhr test]# ls -a
.  ..  a.txt  b.txt  c.txt  dir1  dir2  dir3  .d.txt
</code></pre>
<p>③ 加上【-l】参数，显示文件目录的详细信息<br>
<strong>这个参数时我们最常用的，这个命令会列出文件或目录类型、权限、所属组、创建修改时间（最后一次修改时间，如果时新创建的文件则为创建时间），需要熟练掌握</strong></p>
<pre><code class="language-shell">[root@xiezhr test]# ls -l
total 12
-rw-r--r-- 1 root root    0 Mar 10 23:39 a.txt
-rw-r--r-- 1 root root    0 Mar 10 23:39 b.txt
-rw-r--r-- 1 root root    0 Mar 10 23:39 c.txt
drwxr-xr-x 2 root root 4096 Mar 10 23:38 dir1
drwxr-xr-x 2 root root 4096 Mar 10 23:38 dir2
drwxr-xr-x 2 root root 4096 Mar 10 23:38 dir3
</code></pre>
<p>小技巧：上面的命令我们会发现，时间没显示年份，那么怎么才能显示出我们肉眼既可以看懂的时间呢？</p>
<pre><code class="language-shell">[root@xiezhr test]#  ls -l --time-style=long-iso
total 16
-rw-r--r-- 1 root root   22 2022-03-10 23:44 a.txt
-rw-r--r-- 1 root root    0 2022-03-10 23:39 b.txt
-rw-r--r-- 1 root root    0 2022-03-10 23:39 c.txt
drwxr-xr-x 2 root root 4096 2022-03-10 23:38 dir1
drwxr-xr-x 2 root root 4096 2022-03-10 23:38 dir2
drwxr-xr-x 2 root root 4096 2022-03-10 23:38 dir3
</code></pre>
<p>哇哦，上面命令这么长，使用起来真的不方便，我们给它起个别名吧，这样<strong>叫起来</strong>也比较方便</p>
<pre><code class="language-shell">[root@xiezhr test]# alias lst='ls -l --time-style=long-iso'
[root@xiezhr test]# alias |grep lst
alias lst='ls -l --time-style=long-iso'
[root@xiezhr test]# lst
total 16
-rw-r--r-- 1 root root   22 2022-03-10 23:44 a.txt
-rw-r--r-- 1 root root    0 2022-03-10 23:39 b.txt
-rw-r--r-- 1 root root    0 2022-03-10 23:39 c.txt
drwxr-xr-x 2 root root 4096 2022-03-10 23:38 dir1
drwxr-xr-x 2 root root 4096 2022-03-10 23:38 dir2
drwxr-xr-x 2 root root 4096 2022-03-10 23:38 dir3

</code></pre>
<p>④ 加上【-F】参数，<strong>F是大写</strong>，在文件尾部加上文件类型符号（<em>、/、=、@、|）中一个<br>
**"</em>"表示普通可执行文件、"/"表示目录、"="表示套接字、"@"表示符号链接、"|"表示FIFOs**<br>
具体文件类型可以参照【文件类型】这篇文章</p>
<pre><code class="language-shell">[root@xiezhr test]# ls -F
a.txt  b.txt  c.txt  dir1/  dir2/  dir3/  # 三个目录尾部加上了/
</code></pre>
<p>小技巧：通过【-F】参数，可以过滤出所有目录和普通文件</p>
<pre><code class="language-shell">[root@xiezhr test]# ls -F    # 当前路径下一共包含三个文件和三个目录
a.txt  b.txt  c.txt  dir1/  dir2/  dir3/
[root@xiezhr test]# ls -F|grep /  # 过滤出所有路径
dir1/
dir2/
dir3/
[root@xiezhr test]# ls -F|grep -v /  #过滤出普通文件
a.txt
b.txt
c.txt
</code></pre>
<p>⑤ 假设一个目录下面有很多很多个文件，我们忘记了最近改过的文件的名字（年纪大了，记性越来越不好），这时候要找出它，可以用如下命令</p>
<pre><code class="language-shell">[root@xiezhr test]# touch xiezhr.txt
[root@xiezhr test]# ls -lt
total 16
-rw-r--r-- 1 root root    0 Mar 11 23:02 xiezhr.txt
-rw-r--r-- 1 root root    0 Mar 11 22:52 tt.txt
-rw-r--r-- 1 root root   22 Mar 10 23:44 a.txt
-rw-r--r-- 1 root root    0 Mar 10 23:39 c.txt
-rw-r--r-- 1 root root    0 Mar 10 23:39 b.txt
drwxr-xr-x 2 root root 4096 Mar 10 23:38 dir3
drwxr-xr-x 2 root root 4096 Mar 10 23:38 dir2
drwxr-xr-x 2 root root 4096 Mar 10 23:38 dir1
</code></pre>
<p>我们最近创建或修改的文件就排在最前面了，有没有很方便哦<br>
当然了，可以让你最显目，也可以让你排到最后去。ls -lrt 即可按照时间倒序排。-r 是倒序的意思</p>
<h3 id="mkdir-创建目录">mkdir 创建目录</h3>
<p>1、简介</p>
<p>mkdir 是"<strong>m</strong>a<strong>k</strong>e <strong>dir</strong>ectoy" 英文单词的缩写，功能是创建目录。如果目录存在则提示已存在，不会继续创建</p>
<p>2、语法格式</p>
<pre><code class="language-shell">mkdir [参数选项] [目录]
</code></pre>
<p>3、参数说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-p</td>
<td>递归创建目录。即可以父目录儿子目录孙子目录重孙目录....等一起创建</td>
</tr>
<tr>
<td>-m</td>
<td>创建目录的同时授予权限</td>
</tr>
</tbody>
</table>
<p>4、实践操作<br>
① mkdir 不带任何参数</p>
<pre><code class="language-shell">[root@xiezhr test]# ls
a.txt  b.txt  c.txt  dir1  dir2  dir3  tt.txt  xiezhr.txt
[root@xiezhr test]# mkdir xiezhr
[root@xiezhr test]# ls
a.txt  b.txt  c.txt  dir1  dir2  dir3  tt.txt  xiezhr  xiezhr.txt
</code></pre>
<p>② 同时创建多个目录</p>
<pre><code class="language-shell">[root@xiezhr test]# ls 
a.txt  b.txt  c.txt  dir1  dir2  dir3  tt.txt  xiezhr  xiezhr.txt
[root@xiezhr test]# mkdir dir4 dir5 dir6
[root@xiezhr test]# ls
a.txt  b.txt  c.txt  dir1  dir2  dir3  dir4  dir5  dir6  tt.txt  xiezhr  xiezhr.txt
</code></pre>
<p>③ 使用【-p】参数递归创建目录</p>
<pre><code class="language-shell">[root@xiezhr test]# ls
a.txt  b.txt  c.txt  dir1  dir2  dir3  tt.txt  xiezhr.txt
[root@xiezhr test]# mkdir -p xiezhr/test
[root@xiezhr test]# tree
.
├── a.txt
├── b.txt
├── c.txt
├── dir1
├── dir2
├── dir3
├── tt.txt
├── xiezhr
│   └── test
└── xiezhr.txt

5 directories, 5 files
</code></pre>
<p>④ 使用【-m】参数，创建目录同时授权</p>
<pre><code class="language-shell">[root@xiezhr test]# mkdir -m 755 dir
</code></pre>
<h3 id="tree-以树形结构显示目录下的内容">tree 以树形结构显示目录下的内容</h3>
<p>1、简介</p>
<p>tree 一看到这个命令，我们就知道是树的意思，当然了这里的树并非种的树，而是以树形结构显示目录下内容。</p>
<p>2、语法格式</p>
<pre><code class="language-shell">tree [参数选项] [目录]
</code></pre>
<p>3、参数说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-d</td>
<td>只显示目录</td>
</tr>
<tr>
<td>-L level</td>
<td>遍历目录的最大层数，level为大于0的整数</td>
</tr>
</tbody>
</table>
<p>4、实践操作</p>
<p>注意：个别Linux版本可能没有默认安装tree，大家也不用慌，我们按照如下步骤安装即可</p>
<ul>
<li>下载安装包</li>
</ul>
<pre><code class="language-shell"> wget http://mama.indstate.edu/users/ice/tree/src/tree-1.7.0.tgz
</code></pre>
<ul>
<li>解压安装包</li>
</ul>
<pre><code class="language-shell">tar -zxvf tree-1.7.0.tgz
</code></pre>
<ul>
<li>切换到解压后的目录</li>
</ul>
<pre><code class="language-shell">cd tree-1.7.0
</code></pre>
<ul>
<li>编译安装</li>
</ul>
<pre><code class="language-shell">make install
</code></pre>
<ul>
<li>大功告成，输入tree 命令回车</li>
</ul>
<p>① 不带参数的tree</p>
<pre><code class="language-shell">[root@xiezhr test]# tree
.
├── a.txt
├── b.txt
├── c.txt
├── dir
├── dir1
├── dir2
├── dir3
├── tt.txt
├── xiezhr
│   └── test
└── xiezhr.txt

6 directories, 5 files
</code></pre>
<p>② 加上【-d】参数，只显示目录</p>
<pre><code class="language-shell">[root@xiezhr test]# tree -d
.
├── dir
├── dir1
├── dir2
├── dir3
└── xiezhr
    └── test

6 directories
</code></pre>
<p>③ 加上【-L leave】 列出目录下第leave层结构</p>
<pre><code class="language-shell">[root@xiezhr test]# tree -L 1
.
├── a.txt
├── b.txt
├── c.txt
├── dir
├── dir1
├── dir2
├── dir3
├── tt.txt
├── xiezhr
└── xiezhr.txt

5 directories, 5 files
</code></pre>
<p>④ 加上【-f】显示完整的路径名称 加上【-i】则不显示<strong>树枝</strong>部分</p>
<pre><code class="language-shell">[root@xiezhr test]# tree -f
.
├── ./a.txt
├── ./b.txt
├── ./c.txt
├── ./dir
├── ./dir1
├── ./dir2
├── ./dir3
├── ./tt.txt
├── ./xiezhr
│   └── ./xiezhr/test
└── ./xiezhr.txt

6 directories, 5 files
[root@xiezhr test]# tree -i
.
a.txt
b.txt
c.txt
dir
dir1
dir2
dir3
tt.txt
xiezhr
test
xiezhr.txt

6 directories, 5 files
[root@xiezhr test]# tree -fi
.
./a.txt
./b.txt
./c.txt
./dir
./dir1
./dir2
./dir3
./tt.txt
./xiezhr
./xiezhr/test
./xiezhr.txt

6 directories, 5 files
</code></pre>
<p>⑤ 加上【-F】参数区分目录和文件</p>
<pre><code class="language-shell">[root@xiezhr test]# tree -F
.
├── a.txt
├── b.txt
├── c.txt
├── dir/
├── dir1/
├── dir2/
├── dir3/
├── tt.txt
├── xiezhr/
│   └── test/
└── xiezhr.txt

6 directories, 5 files
</code></pre>
<p><strong>尾部带/的为目录</strong></p>
<h3 id="touch-创建空白文件或改变文件的时间戳属性">touch 创建空白文件或改变文件的时间戳属性</h3>
<p>1、简介</p>
<p>touch 是触摸的意思，摸一下文件可以创建空白文件或改变文件时间属性<br>
<strong>touch 不能创建目录但是能改变目录的时间戳属性</strong></p>
<p>2、语法格式</p>
<pre><code class="language-shell">touch [参数选项] [文件]
</code></pre>
<p>3、参数说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-a</td>
<td>只更改文件最后访问时间</td>
</tr>
<tr>
<td>-m</td>
<td>只更改文件最后修改时间</td>
</tr>
<tr>
<td>-d string</td>
<td>使用字符串string代表的时间模板设置指定文件的时间属性</td>
</tr>
</tbody>
</table>
<p>4、实践操作</p>
<p>① 不带任何参数</p>
<pre><code class="language-shell">[root@xiezhr test]# touch xiezhr.txt
[root@xiezhr test]# ls
a.txt  b.txt  c.txt  dir  dir1  dir2  dir3  tt.txt  xiezhr  xiezhr.txt
</code></pre>
<p>②更改文件时间戳属性(文件的时间戳属性：访问时间、修改时间、状态改变时间)</p>
<ul>
<li>stat 查看文件时间戳属性</li>
<li>-m 更改文件修改时间</li>
<li>-a 更改文件的访问时间</li>
</ul>
<pre><code class="language-shell">[root@xiezhr test]# stat xiezhr.txt 
  File: ‘xiezhr.txt’
  Size: 0               Blocks: 0          IO Block: 4096   regular empty file
Device: fd01h/64769d    Inode: 2661        Links: 1
Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2022-03-12 21:04:32.681919249 +0800
Modify: 2022-03-12 21:04:32.681919249 +0800
Change: 2022-03-12 21:04:32.681919249 +0800
 Birth: -
[root@xiezhr test]# touch -m xiezhr.txt 
[root@xiezhr test]# stat xiezhr.txt 
  File: ‘xiezhr.txt’
  Size: 0               Blocks: 0          IO Block: 4096   regular empty file
Device: fd01h/64769d    Inode: 2661        Links: 1
Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2022-03-12 21:04:32.681919249 +0800
Modify: 2022-03-12 21:08:22.344330251 +0800
Change: 2022-03-12 21:08:22.344330251 +0800
 Birth: -
[root@xiezhr test]# touch -a xiezhr.txt 
[root@xiezhr test]# stat xiezhr.txt 
  File: ‘xiezhr.txt’
  Size: 0               Blocks: 0          IO Block: 4096   regular empty file
Device: fd01h/64769d    Inode: 2661        Links: 1
Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2022-03-12 21:08:42.528893719 +0800
Modify: 2022-03-12 21:08:22.344330251 +0800
Change: 2022-03-12 21:08:42.528893719 +0800
 Birth: -
</code></pre>
<h3 id="cp-复制文件或目录">cp 复制文件或目录</h3>
<p>1、简介</p>
<p>cp 是<strong>c</strong>o<strong>p</strong>y 英文单词的缩写，功能是复制文件或目录</p>
<p>2、语法格式</p>
<pre><code class="language-shell">cp [参数选项] [源文件] [目标文件]
</code></pre>
<p>3、参数说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-p</td>
<td>复制时保持源文件的权限、时间属性</td>
</tr>
<tr>
<td>-d</td>
<td>如果复制的文件时符号链接，那么仅赋值符号链接本身，而且保留符号链接所指向的目标文件或目录</td>
</tr>
<tr>
<td>-r</td>
<td>递归复制目录，即复制目录下所有层级的子目录及文件</td>
</tr>
<tr>
<td>-a</td>
<td>等同于-p、-d、-r三个命令总和</td>
</tr>
<tr>
<td>-i</td>
<td>覆盖已有文件提示用户确认</td>
</tr>
</tbody>
</table>
<p>4、实践操作</p>
<p>① 将文件a.txt 复制为 aaa.txt</p>
<pre><code class="language-shell">[root@xiezhr test]# cp a.txt aaa.txt
[root@xiezhr test]# ls
aaa.txt  a.txt  b.txt  c.txt  dir  dir1  dir2  dir3  dir_bak  tt.txt  xiezhr  xiezhr.txt
</code></pre>
<p>②复制目录，将dir 目录复制为dir_bak</p>
<pre><code class="language-shell">[root@xiezhr test]# ls
aaa.txt  a.txt  b.txt  c.txt  dir  dir1  dir2  dir3  tt.txt  xiezhr  xiezhr.txt
[root@xiezhr test]# cp -r dir dir_bak
[root@xiezhr test]# ls
aaa.txt  a.txt  b.txt  c.txt  dir  dir1  dir2  dir3  dir_bak  tt.txt  xiezhr  xiezhr.txt
</code></pre>
<h3 id="mv-移动或重命名文件">mv 移动或重命名文件</h3>
<p>1、简介</p>
<p>mv 是 <strong>m</strong>o<strong>v</strong>e 的缩写，功能是移动重命名文件</p>
<p>2、语法格式</p>
<pre><code class="language-shell">mv [参数选项] [源文件] [目标文件]
</code></pre>
<p>3、参数说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-f</td>
<td>若目标文件已经存在，则不会询问直接覆盖</td>
</tr>
<tr>
<td>-i</td>
<td>若目标文件已存在，则会询问是否覆盖</td>
</tr>
<tr>
<td>-n</td>
<td>不覆盖已经存在的文件</td>
</tr>
<tr>
<td>-u</td>
<td>在源文件比目标文件新，或目标文件不存在时才进行移动</td>
</tr>
</tbody>
</table>
<p>4、实践操作</p>
<p>① 给文件改名(如果a1.txt 不存在，则将aaa.txt 重命名为a1.txt)</p>
<pre><code class="language-shell">[root@xiezhr test]# ls
aaa.txt  b.txt  c.txt  dir  dir1  dir2  dir3  dir_bak  tt.txt  xiezhr  xiezhr.txt
[root@xiezhr test]# mv aaa.txt a1.txt
[root@xiezhr test]# ls
a1.txt  b.txt  c.txt  dir  dir1  dir2  dir3  dir_bak  tt.txt  xiezhr  xiezhr.txt
</code></pre>
<p>② 给文件重命名（如果a2.txt存在，则将a1.txt 覆盖为a2.txt）</p>
<pre><code class="language-shell">[root@xiezhr test]# ls
a1.txt  a2.txt  b.txt  c.txt  dir  dir1  dir2  dir3  dir_bak  tt.txt  xiezhr  xiezhr.txt
[root@xiezhr test]# mv a1.txt a2.txt 
mv: overwrite ‘a2.txt’? y
[root@xiezhr test]# ls
a2.txt  b.txt  c.txt  dir  dir1  dir2  dir3  dir_bak  tt.txt  xiezhr  xiezhr.txt
</code></pre>
<p>③ 移动单个文件或多个文件</p>
<pre><code class="language-shell">[root@xiezhr test]# ls
a2.txt  b.txt  c.txt  dir  dir1  dir2  dir3  dir_bak  tt.txt  xiezhr  xiezhr.txt
[root@xiezhr test]# mv a2.txt dir/
[root@xiezhr test]# ls
b.txt  c.txt  dir  dir1  dir2  dir3  dir_bak  tt.txt  xiezhr  xiezhr.txt
[root@xiezhr test]# mv b.txt c.txt dir/
[root@xiezhr test]# ls
dir  dir1  dir2  dir3  dir_bak  tt.txt  xiezhr  xiezhr.txt
</code></pre>
<p>④移动目录 如果目录存在则将文件移动到目录中，如果不存在则将目录改名</p>
<pre><code class="language-shell">[root@xiezhr test]# ls
a2.txt  b.txt  c.txt  dir  dir1  dir2  dir3  dir_bak  tt.txt  xiezhr  xiezhr.txt
[root@xiezhr test]# mv a2.txt dir/
[root@xiezhr test]# ls
b.txt  c.txt  dir  dir1  dir2  dir3  dir_bak  tt.txt  xiezhr  xiezhr.txt
[root@xiezhr test]# mv b.txt c.txt dir/
[root@xiezhr test]# ls
dir  dir1  dir2  dir3  dir_bak  tt.txt  xiezhr  xiezhr.txt
[root@xiezhr test]# mv dir1 dir
[root@xiezhr test]# ls
dir  dir2  dir3  dir_bak  tt.txt  xiezhr  xiezhr.txt
[root@xiezhr test]# mv dir2 dir5
[root@xiezhr test]# ls
dir  dir3  dir5  dir_bak  tt.txt  xiezhr  xiezhr.txt
</code></pre>
<h3 id="rm-删除文件或目录">rm 删除文件或目录</h3>
<p>1、简介</p>
<p>rm 时<strong>rm</strong>ove 英文单词的缩写，功能时删除一个或多个文件、目录。rm是Linux中最危险的命令。如果删错了那只有跑路了~ 慎重慎重慎重😂</p>
<p>2、语法格式</p>
<pre><code class="language-shell">rm [参数选项] [文件或目录]
</code></pre>
<p>3、参数说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-f</td>
<td>强制删除，忽率不存在的文件，不提示确认</td>
</tr>
<tr>
<td>-r</td>
<td>递归删除目录及其内容</td>
</tr>
</tbody>
</table>
<p>4、实践操作</p>
<p>① 不带参数的删除,删除需要确认</p>
<pre><code class="language-shell">[root@xiezhr test]# ls
a.txt  b.txt  c.txt  dir  dir3  dir5  dir_bak  tt.txt  xiezhr  xiezhr.txt
[root@xiezhr test]# rm a.txt 
rm: remove regular empty file ‘a.txt’? y
[root@xiezhr test]# ls
b.txt  c.txt  dir  dir3  dir5  dir_bak  tt.txt  xiezhr  xiezhr.txt
</code></pre>
<p>②强制删除文件,不需要确认</p>
<pre><code class="language-shell">[root@xiezhr test]# ls
b.txt  c.txt  dir  dir3  dir5  dir_bak  tt.txt  xiezhr  xiezhr.txt
[root@xiezhr test]# rm -f b.txt
[root@xiezhr test]# ls
c.txt  dir  dir3  dir5  dir_bak  tt.txt  xiezhr  xiezhr.txt
</code></pre>
<p>③ 递归删除目录文件</p>
<pre><code class="language-shell">[root@xiezhr test]# tree dir1/
dir1/
└── a
    └── b
        └── t.txt

2 directories, 1 file
[root@xiezhr test]# rm -rf dir1/
[root@xiezhr test]# ls
c.txt  dir  dir3  dir5  dir_bak  tt.txt  xiezhr  xiezhr.txt
</code></pre>
<p>注意：<strong>数据无价，慎重、慎重、慎重</strong></p>
<ul>
<li>尽量用mv代替rm ,先将文件移动到其他目录/tmp，类似于windows的垃圾回收站</li>
<li>删除前必须备份，即使只是删除一个很不起眼的文件</li>
<li>如果非要用到“rm -rf”,一定要确认好路径，别来个<strong>rm -rf/</strong>  那就真的玩完了，跑路都是小事，如果造成损失可能要负法律责任。</li>
</ul>
<h3 id="chown-改变文件或目录的用户用户组">chown 改变文件或目录的用户用户组</h3>
<p>1、简介</p>
<p>chown 是<strong>ch</strong>ange <strong>own</strong>er 英文的缩写，用于改变文件或目录的所属用户和用户组</p>
<p>2、语法格式</p>
<pre><code class="language-shell">chown [参数选项] [用户：用户组] [文件或目录]

chown 用户 文件或目录       # 仅仅授权用户
chown :组 文件或目录        # 仅仅授权组
chown 用户:组 文件或目录    # 不仅授权用户，还授权组
</code></pre>
<p>3、参数说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-R</td>
<td>递归更改目录的用户和用户组</td>
</tr>
</tbody>
</table>
<p>4、实践操作</p>
<p>① 更改文件的用户和组</p>
<pre><code class="language-shell">[root@xiezhr test]# ll c.txt
-rw-r--r-- 1 root root 0 Mar 14 22:37 c.txt
[root@xiezhr test]# chown xiezhr:xiezhr c.txt
[root@xiezhr test]# ll c.txt 
-rw-r--r-- 1 xiezhr xiezhr 0 Mar 14 22:37 c.txt
</code></pre>
<p>② 递归更改目录即目录下所有目录及文件的用户和用户组属性</p>
<pre><code class="language-shell">[root@xiezhr test]# ll -d dir
drwxr-xr-x 3 root root 4096 Mar 13 16:08 dir
[root@xiezhr test]# chown -R xiezhr.xiezhr dir/
[root@xiezhr test]# ll -d dir
drwxr-xr-x 3 xiezhr xiezhr 4096 Mar 13 16:08 dir
</code></pre>
<h3 id="chmod-改变文件或目录的权限">chmod 改变文件或目录的权限</h3>
<p>1、简介</p>
<p>chmod 是<strong>ch</strong>ange <strong>mod</strong>e 英文单词的缩写，用户改变文件或目录的权限。该命令只有文件的属主和root用户可以使用</p>
<p>2、语法格式</p>
<pre><code class="language-shell">chmod [参数选项] [模式选项] [文件或目录]
</code></pre>
<p>我们输入如下命令后，会显示文件或目录的详细信息。那么开头的一堆东西代表什么呢？</p>
<pre><code class="language-shell">[root@xiezhr test]# ll
total 20
-rw-r--r-- 1 xiezhr xiezhr    0 Mar 14 22:37 c.txt
drwxr-xr-x 3 xiezhr xiezhr 4096 Mar 13 16:08 dir
drwxr-xr-x 2 root   root   4096 Mar 10 23:38 dir3
</code></pre>
<p><img src="https://img2023.cnblogs.com/blog/2381533/202304/2381533-20230422153917472-1009246901.png" alt="" loading="lazy"></p>
<p><img src="https://img2023.cnblogs.com/blog/2381533/202304/2381533-20230422153917300-763613992.png" alt="" loading="lazy"></p>
<p>如上图所示，</p>
<ul>
<li>
<p>Linux权限分为三级 : 文件所有者（Owner）、用户组（Group）、其它用户（Other Users）</p>
</li>
<li>
<p>第一位代表文件类型，-表示普通文件 d 表示目录</p>
</li>
<li>
<p>r是<strong>r</strong>ead的缩写，代表可读权限       对应<strong>4</strong></p>
</li>
<li>
<p>w是<strong>w</strong>rite的缩写，代表可写权限      对应<strong>2</strong></p>
</li>
<li>
<p>x是e<strong>x</strong>ecute的缩写，代表可执行权限  对应<strong>1</strong></p>
</li>
<li>
<p>-没有任何权限                        对应<strong>0</strong></p>
</li>
<li>
<p>a 是<strong>a</strong>ll 的缩写，代表所有等于u、g、o的综合</p>
</li>
<li>
<p>u 是<strong>u</strong>ser的缩写，代表文件拥有者</p>
</li>
<li>
<p>g 是<strong>g</strong>roup的缩写，代表用户组</p>
</li>
<li>
<p>o 是<strong>o</strong>ther的缩写，代表其他用户</p>
</li>
</ul>
<p>3、参数说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-R</td>
<td>递归处理指定目录及其子目录下的所有文件</td>
</tr>
</tbody>
</table>
<p>4、实践操作<br>
① 设置所有权限为空</p>
<pre><code class="language-shell">[root@xiezhr test]# ll c.txt 
-rw-r--r-- 1 xiezhr xiezhr 0 Mar 14 22:37 c.txt
[root@xiezhr test]# chmod a= c.txt 
[root@xiezhr test]# ll c.txt 
---------- 1 xiezhr xiezhr 0 Mar 14 22:37 c.txt
</code></pre>
<p>② 设置文件拥有者具有文件可执行属性</p>
<pre><code class="language-shell">[root@xiezhr test]# ll c.txt 
---------- 1 xiezhr xiezhr 0 Mar 14 22:37 c.txt
[root@xiezhr test]# chmod u+x c.txt 
[root@xiezhr test]# ll c.txt 
---x------ 1 xiezhr xiezhr 0 Mar 14 22:37 c.txt
</code></pre>
<p>②设置文件组具有文件可写权限</p>
<pre><code class="language-shell">[root@xiezhr test]# ll c.txt 
---x------ 1 xiezhr xiezhr 0 Mar 14 22:37 c.txt
[root@xiezhr test]# chmod g+w c.txt 
[root@xiezhr test]# ll c.txt 
---x-w---- 1 xiezhr xiezhr 0 Mar 14 22:37 c.txt
</code></pre>
<p>③ 设置其他用户具有文件可读权限</p>
<pre><code class="language-shell">[root@xiezhr test]# ll c.txt 
---x-w---- 1 xiezhr xiezhr 0 Mar 14 22:37 c.txt
[root@xiezhr test]# chmod o+r c.txt 
[root@xiezhr test]# ll c.txt
---x-w-r-- 1 xiezhr xiezhr 0 Mar 14 22:37 c.txt
</code></pre>
<p>④ 多个权限一起</p>
<pre><code class="language-shell">[root@xiezhr test]# ll c.txt 
---x-w-r-- 1 xiezhr xiezhr 0 Mar 14 22:37 c.txt
[root@xiezhr test]# chmod ugo+x c.txt 
[root@xiezhr test]# ll c.txt 
---x-wxr-x 1 xiezhr xiezhr 0 Mar 14 22:37 c.txt
</code></pre>
<p>⑤ 撤销其他用户可执行权限</p>
<pre><code class="language-shell">[root@xiezhr test]# ll c.txt 
---x-wxr-x 1 xiezhr xiezhr 0 Mar 14 22:37 c.txt
[root@xiezhr test]# chmod o-x c.txt 
[root@xiezhr test]# ll c.txt
---x-wxr-- 1 xiezhr xiezhr    0 Mar 14 22:37 c.txt
</code></pre>
<p>⑥ 通过数字设置文件拥有者可读可写可执行、用户组可读可执行、其他用户可读可执行</p>
<pre><code class="language-shell">[root@xiezhr test]# ll c.txt 
---x-wxr-- 1 xiezhr xiezhr 0 Mar 14 22:37 c.txt
[root@xiezhr test]# chmod 755 c.txt 
[root@xiezhr test]# ll c.txt
-rwxr-xr-x 1 xiezhr xiezhr 0 Mar 14 22:37 c.txt
</code></pre>
<p>⑦使用【-R】参数递归授予dir目录下所有文件权限</p>
<pre><code class="language-shell">[root@xiezhr test]# ll dir
total 8
-rw-r--r-- 1 xiezhr xiezhr   90 Mar 13 15:24 a2.txt
-rw-r--r-- 1 xiezhr xiezhr    0 Mar 10 23:39 b.txt
-rw-r--r-- 1 xiezhr xiezhr    0 Mar 10 23:39 c.txt
drwxr-xr-x 2 xiezhr xiezhr 4096 Mar 10 23:38 dir1
[root@xiezhr test]# chmod -R 755 dir/
[root@xiezhr test]# ll dir
total 8
-rwxr-xr-x 1 xiezhr xiezhr   90 Mar 13 15:24 a2.txt
-rwxr-xr-x 1 xiezhr xiezhr    0 Mar 10 23:39 b.txt
-rwxr-xr-x 1 xiezhr xiezhr    0 Mar 10 23:39 c.txt
drwxr-xr-x 2 xiezhr xiezhr 4096 Mar 10 23:38 dir1
</code></pre>
<h3 id="chgrp-更改文件用户组">chgrp 更改文件用户组</h3>
<p>1、简介</p>
<p>chgrp 是<strong>ch</strong>ange <strong>gr</strong>ou<strong>p</strong> 的缩写，仅仅用于改变文件的用户组。chgrp 允许普通用户改变文件所属的组，只要该用户是该组的一员。一般我们都使用chown 命令</p>
<p>2、语法格式</p>
<pre><code class="language-shell">chgrp [参数选项] [用户组] [文件或目录]
</code></pre>
<p>3、参数说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-R</td>
<td>递归更改文件的用户组</td>
</tr>
</tbody>
</table>
<p>4、实践操作</p>
<p>①修改文件组属性</p>
<pre><code class="language-shell">[root@xiezhr test]# ll a.txt 
-rw-r--r-- 1 root root 0 Mar 15 21:35 a.txt
[root@xiezhr test]# chgrp xiezhr a.txt 
[root@xiezhr test]# ll a.txt 
-rw-r--r-- 1 root xiezhr 0 Mar 15 21:35 a.txt
</code></pre>
<p>② 递归改变文件用户组属性</p>
<pre><code class="language-shell">[root@xiezhr test]# ll dir3/
total 0
-rw-r--r-- 1 root root 0 Mar 15 21:37 a.txt
-rw-r--r-- 1 root root 0 Mar 15 21:37 b.txt
[root@xiezhr test]# chgrp -R xiezhr dir3/
[root@xiezhr test]# ll dir3/
total 0
-rw-r--r-- 1 root xiezhr 0 Mar 15 21:37 a.txt
-rw-r--r-- 1 root xiezhr 0 Mar 15 21:37 b.txt
</code></pre>
<h3 id="ln-硬链接与软连接">ln 硬链接与软连接</h3>
<p>1、简介</p>
<p>ln 是<strong>l</strong>i<strong>n</strong>k英文单词缩写，功能是创建文件间的链接（链接分为软链接和硬链接）</p>
<blockquote>
<p>当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在 其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。</p>
</blockquote>
<p>那么什么是硬链接?什么又是软链接呢？</p>
<p><strong>【软链接】</strong></p>
<ul>
<li>1.软链接，以路径的形式存在。类似于Windows操作系统中的快捷方式</li>
<li>2.软链接可以 跨文件系统 ，硬链接不可以</li>
<li>3.软链接可以对一个不存在的文件名进行链接</li>
<li>4.软链接可以对目录进行链接</li>
</ul>
<p><strong>【硬链接】</strong></p>
<ul>
<li>1.硬链接，以文件副本的形式存在。但不占用实际空间。</li>
<li>2.不允许给目录创建硬链接</li>
<li>3.硬链接只有在同一个文件系统中才能创建</li>
</ul>
<p>2、语法格式</p>
<pre><code class="language-shell">
</code></pre>
<p>3、参数说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>无参数</td>
<td>创建硬链接</td>
</tr>
<tr>
<td>-s</td>
<td>创建硬链接</td>
</tr>
</tbody>
</table>
<p>4、实践操作</p>
<p>①为a.txt 创建软连接linka。<strong>如果a.txt丢失，linka失效</strong></p>
<pre><code class="language-shell">[root@xiezhr dir]# ll
total 4
-rw-r--r-- 1 root root 17 Mar 15 22:25 a.txt
[root@xiezhr dir]# ln -s a.txt linka
[root@xiezhr dir]# ll
total 4
-rw-r--r-- 1 root root 17 Mar 15 22:25 a.txt
lrwxrwxrwx 1 root root  5 Mar 15 22:28 linka -&gt; a.txt
</code></pre>
<p>② 给文件a.txt创建硬链接，lna，a.txt与lna的各项属性相同</p>
<pre><code class="language-shell">[root@xiezhr dir]# ll
total 4
-rw-r--r-- 1 root root 17 Mar 15 22:25 a.txt
lrwxrwxrwx 1 root root  5 Mar 15 22:28 linka -&gt; a.txt
[root@xiezhr dir]# ln a.txt lna
[root@xiezhr dir]# ll
total 8
-rw-r--r-- 2 root root 17 Mar 15 22:25 a.txt
lrwxrwxrwx 1 root root  5 Mar 15 22:28 linka -&gt; a.txt
-rw-r--r-- 2 root root 17 Mar 15 22:25 lna
</code></pre>
<p><strong>总结：</strong></p>
<ul>
<li>【删除软连接文件，对源文件及硬链接文件无影响】删除软连接linka,对a.txt和lna无影响</li>
<li>【删除硬链接文件，对源文件及软链接文件无影响】删除硬链接lna,对a.txt和linka无影响</li>
<li>【删除源文件，对硬链接文件无影响，但会导致软链接失效】 删除a.txt,对lna无影响，linka链接失效</li>
<li>【只有同事删除源文件、硬链接文件才会真正删除整个文件】删除lna、a.txt 整个文件才会被删除</li>
</ul>
<h3 id="redlink-查看符号连接文件的内容">redlink 查看符号连接文件的内容</h3>
<p>1、简介</p>
<p>我们使用cat/more 查看软链接文件时，只能查看源文件内容，不能查看软链接的时哪个文件。这时候readlink就派上用场了</p>
<p>2、语法格式</p>
<pre><code class="language-shell">readlink [参数选项] [文件]
</code></pre>
<p>3、参数说明</p>
<p>一般不加参数</p>
<p>4、实践操作</p>
<p>① 查看软链接linka</p>
<pre><code class="language-shell">[root@xiezhr dir]# cat linka
ffdfdfadf
fdfdf

[root@xiezhr dir]# readlink linka
a.txt
</code></pre>
<h3 id="find-查找目录下的文件">find 查找目录下的文件</h3>
<p>1、简介</p>
<p>find 根据根据意思，你可能就知道其功能了。find用户查找目录下的文件，同时也可以调用其他命令执行相应操作</p>
<p>2、语法格式</p>
<pre><code class="language-shell">find [路径] [操作语句] [执行的动作]
</code></pre>
<p>3、参数说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>pathname</td>
<td>命令所查找的路径，常用的.表示当前路径，/表示系统根目录</td>
</tr>
<tr>
<td>-maxdepth levels</td>
<td>查找的最大目录级数，leves 为自然数</td>
</tr>
<tr>
<td>-name</td>
<td>按照文件名查找文件，支持*、？、[] 通配符</td>
</tr>
<tr>
<td>-type</td>
<td>查找某一类型的文件① b[块设备文件] ② c[字符设备文件] ③ d[目录] ④ p[管道文件] ⑤ l[符号链接文件] ⑥ f[普通文件] ⑦s[stocket文件]</td>
</tr>
<tr>
<td>-exec</td>
<td>对匹配的文件执行该参数所给出的shell命令</td>
</tr>
<tr>
<td>！</td>
<td>取反</td>
</tr>
<tr>
<td>-a</td>
<td>取交集,and</td>
</tr>
<tr>
<td>-o</td>
<td>取并集,or</td>
</tr>
</tbody>
</table>
<p>4、实践操作</p>
<p>① 【-name】根据文件名检索</p>
<ul>
<li><strong>区分大小写，需要忽略文件名中的大小写，可以使用 -iname参数</strong></li>
<li>可配合通配符"*"、"?" 使用</li>
<li><strong>"?" 可以表示任意一个单一的符号</strong></li>
<li><strong>"*" 可以表示任意数量（包括 0）的未知符号</strong></li>
</ul>
<pre><code class="language-shell"># 查找 /home/test 目录下所有文件名以 .txt 结尾的文件
[root@xiezhr test]# find /home/test/ -name '*.txt'
/home/test/.d.txt
/home/test/dir/a.txt
/home/test/dir3/b.txt
/home/test/dir3/a.txt
/home/test/a.txt
/home/test/tt.txt
/home/test/c.txt
/home/test/xiezhr.txt
</code></pre>
<pre><code class="language-shell"># 查找 /home/test 目录下所有文件名刚好为 1 个字符的文件
[root@xiezhr test]# find /home/test/ -name '?.txt'
/home/test/dir/a.txt
/home/test/dir3/b.txt
/home/test/dir3/a.txt
/home/test/a.txt
/home/test/c.txt
</code></pre>
<p>② 【-type】 根据文件类型检索</p>
<pre><code class="language-shell"># 查找 /home/test 目录下所有java普通文件 下面命令中f 代表普通文件。上面参数中已说明
[root@xiezhr test]# find /home/test/ -type f -name '*.java'
/home/test/user.java
/home/test/money.java
/home/test/test.java
/home/test/xiezhr.java
</code></pre>
<p>③ 【-atime -mtime】查找指定时间内修改过的文件</p>
<pre><code class="language-shell"># 查找当前目录，一天内访问过的文件 .表示当前路径，-1表示一天内
[root@xiezhr test]# find . -atime -1
./user.java
./dir/linka
./dir/lna
./dir/a.txt
./money.java
./test.java
./xiezhr.java
</code></pre>
<pre><code class="language-shell"># 在/home/test 目录下，查找2天内修改过的文件
[root@xiezhr test]# find /home/test/ -mtime -2
/home/test/
/home/test/user.java
/home/test/dir
/home/test/dir/linka
/home/test/dir/lna
</code></pre>
<p><img src="https://img2023.cnblogs.com/blog/2381533/202304/2381533-20230422153917311-1122605318.png" alt="" loading="lazy"></p>
<p>参照上图所示</p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"><label> -4 代表文件更改时间距离现在4天以内</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"><label> +4 代表文件更改时间距离现在4天以前</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"><label> 4 表示距离现在第四天</label></li>
</ul>
<p>④ 【!】 进行反向查找</p>
<pre><code class="language-shell"># 查找当前目录下所有目录
[root@xiezhr test]# find -type d
.
./dir5
./xiezhr
./xiezhr/test
./dir
./dir3
./dir_bak
# 查找当前目录下非目录的文件
[root@xiezhr test]# find ! -type d
./user.java
./.d.txt
./dir/linka
./dir/lna
./dir/a.txt
./money.java
./dir3/b.txt
./dir3/a.txt
./test.java
</code></pre>
<p>⑤【-size】 根据文件大小查找</p>
<p>如下命令中</p>
<ul>
<li>"+" 表示大于</li>
<li>"-" 表示小于</li>
<li>"c" 表示字节</li>
<li>"k" 表示kb</li>
<li>"M" 表示Mb</li>
<li>"G" 表示Gb</li>
</ul>
<pre><code class="language-shell">[root@xiezhr test]# find -size +200c
.
./dir5
./xiezhr
./xiezhr/test
./dir
./dir3
./dir_bak
</code></pre>
<p>⑥ 【-perm】 根据文件权限查找</p>
<pre><code class="language-shell"># 检索 /home/test 目录下权限为 rw-r--r-- 的文件
[root@xiezhr test]# find /home/test/ -perm u=rw-,g=r--,o=r--
/home/test/user.java
/home/test/.d.txt
/home/test/dir/lna
/home/test/dir/a.txt
/home/test/money.java
</code></pre>
<p>上面列子可以写成如下</p>
<pre><code class="language-shell">[root@xiezhr test]# find /home/test/ -perm 644
/home/test/user.java
/home/test/.d.txt
/home/test/dir/lna
/home/test/dir/a.txt
/home/test/money.java
</code></pre>
<p>⑦ 查找当前目录下所有普通问及那，并用ls -l 命令将其列出来</p>
<pre><code class="language-shell">[root@xiezhr test]# find -type f -exec ls {} \;
./user.java
./.d.txt
./dir/lna
./dir/a.txt
./money.java
</code></pre>
<p>上述列子中</p>
<ul>
<li>-exec 后面的时操作命令，可以是ls、rm、delete 等命令</li>
<li>命令最后以;结尾，考虑到到各个系统;可能有不同含义，所以在前面加上\进行转义</li>
<li>{} 表示前面find 命令查到的结果，{} 前后必须要有空格</li>
</ul>
<p>⑧ <strong>在目录中查找n天以前的文件并删除它,实际工作中我们会经常用到。</strong></p>
<p><strong>我们在服务器上部署的应用程序一般都会输出日志文件，时间一长可能日志文件会成百上千，一下就把你的磁盘空间给撑满了。</strong></p>
<p>这时候下面命令就显得很重要了。<br>
<strong>一般情况下，这些命令我们我们会配置到Linux任务调度中自动执行</strong></p>
<pre><code class="language-shell">[root@xiezhr test]# find . -type f -name "xiezhr*.log" -mtime +7 -exec rm -f {} \;
[root@xiezhr test]#
</code></pre>
<p>或者</p>
<pre><code class="language-shell"># | 表示管道符号 xargs是一个向其他命令传递参数的过滤器。后面都会说到
# 下面命令表示 find 查找到的普通文件 传递给rm -f 执行
[root@xiezhr test]# find . -type f -name "xiezhr*.log" -mtime +7 |xargs rm -f
[root@xiezhr test]#
</code></pre>
<p>或者</p>
<pre><code class="language-shell">[root@xiezhr test]# find . -type f -name "xiezhr*.log" -mtime +7 -delete
[root@xiezhr test]#
</code></pre>
<p>⑨ 将查找到的文件移动到另一个目录下</p>
<pre><code class="language-shell"># 利用xargs -i 命令将find 查找当前目录下的所有java文件作为参数传递给mv命令
[root@xiezhr test]# find -type f -name "*.java" |xargs -i mv {} dir3/
[root@xiezhr test]# ls dir3
a.txt  b.txt  money.java  test.java  user.java  xiezhr.java
</code></pre>
<p>⑩ <strong>我们想将/home/test 目录下多个的高清电影发给好兄弟，这时就需要筛选出当前目录下所有电影并进行压缩</strong></p>
<pre><code class="language-shell">[root@xiezhr test]# ls
a.txt  c.txt  dir  dir3  dir5  dir_bak  tt.txt  xiezhr  xiezhr.txt  化学资料.mp4  数学资料.mp4  物理.mp4
[root@xiezhr test]# find . -name "*.mp4" -exec tar -czvf movie.tar.gz {} \;
./数学资料.mp4
./物理.mp4
./化学资料.mp4
[root@xiezhr test]# ls
a.txt  c.txt  dir  dir3  dir5  dir_bak  movie.tar.gz  tt.txt  xiezhr  xiezhr.txt  化学资料.mp4  数学资料.mp4  物理.mp4
</code></pre>
<p>movie.tar.gz 就是最后压缩后的文件</p>
<h3 id="xargs-将标准输入转换成命令行参数">xargs 将标准输入转换成命令行参数</h3>
<p>1、简介</p>
<p>xargs 是 e<strong>x</strong>tended <strong>arg</strong>ument<strong>s</strong> 单词的缩写。它是命令传递参数的一个过滤器。xargs在上一个例子中已经用到过。它能够捕获一个命令的输出，然后传递给另外一个命令</p>
<p>2、语法格式</p>
<pre><code class="language-shell">xargs [参数选项]
</code></pre>
<p>3、参数说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>参数选项</th>
</tr>
</thead>
<tbody>
<tr>
<td>-n</td>
<td>指定每行的最大参数量n,可以将输入的文本划分为多行，每行n个参数，默认空格分隔</td>
</tr>
<tr>
<td>-d</td>
<td>自定义分隔符</td>
</tr>
<tr>
<td>-i</td>
<td>以{}替代前面的结果</td>
</tr>
</tbody>
</table>
<p>4、实践操作</p>
<p>① 多行输入变单行</p>
<pre><code class="language-shell">[root@xiezhr test]# clear
[root@xiezhr test]# cat test.txt 
1 2 3 4 5
6 7 
8 9
10 11 12 13

14 15 17 18
[root@xiezhr test]# xargs &lt; test.txt 
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 17 18
</code></pre>
<p>② 通过【-n】指定每行的输出个数</p>
<pre><code class="language-shell">[root@xiezhr test]# cat test.txt 
1 2 3 4 5
6 7 
8 9
10 11 12 13

14 15 17 18
[root@xiezhr test]# xargs -n  4 &lt; test.txt 
1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 17
18
</code></pre>
<p>③ 通过【-d】自定义分隔符</p>
<pre><code class="language-shell">[root@xiezhr test]# echo "xiezhr-的- 个人公众号是：-XiezhrSpace" | xargs -d- -n4
xiezhr 的  个人公众号是： XiezhrSpace
</code></pre>
<p>④ 通过【-I】可以指定一个替换的字符串</p>
<pre><code class="language-shell"># xargs -i 参数可以让{}替代前面find查找到的内容
[root@xiezhr test]# find . -name "*.mp4"|xargs -i mv {} dir/
[root@xiezhr test]# ls
a.txt  c.txt  dir  dir3  dir5  dir_bak  movie.tar.gz  test.txt  tt.txt  xiezhr  xiezhr.txt
</code></pre>
<pre><code class="language-shell"># -I 参数可以指定其他字符代替{}，本例中则使用[] 替代{}
[root@xiezhr test]# ls
a.txt  c.txt  dir  dir2  dir3  dir5  dir_bak  movie.tar.gz  test.txt  tt.txt  xiezhr  xiezhr.txt
[root@xiezhr test]# find . -name "*.txt"|xargs -I [] cp [] dir3
cp: ‘./dir3/b.txt’ and ‘dir3/b.txt’ are the same file
cp: ‘./dir3/a.txt’ and ‘dir3/a.txt’ are the same file
</code></pre>
<h3 id="rename-重命名文件">rename 重命名文件</h3>
<p>1、简介</p>
<p>rename 根据名字就可以知道是重命名</p>
<p>2、语法格式</p>
<pre><code class="language-shell">rename from to file
</code></pre>
<p>3、参数说明</p>
<ul>
<li>from 表示需要替换或者需要处理的字符（一般是文件名的一部分或扩展名）</li>
<li>to 把前面的from 代表的内容替换成to代表的内容</li>
<li>file 表示待处理的文件，可以用"*"通配所有文件</li>
</ul>
<p>4、实践操作</p>
<pre><code class="language-shell">[root@xiezhr dir5]# ll
total 0
-rw-r--r-- 1 root root 0 Mar 18 20:47 xie_20220315_unfidend.jpg
-rw-r--r-- 1 root root 0 Mar 18 20:47 xie_20220316_unfidend.jpg
-rw-r--r-- 1 root root 0 Mar 18 20:47 xie_20220317_unfidend.jpg
-rw-r--r-- 1 root root 0 Mar 18 20:47 xie_20220318_unfidend.jpg
-rw-r--r-- 1 root root 0 Mar 18 20:47 xie_20220319_unfidend.jpg
[root@xiezhr dir5]# rename "_unfidend" "" *
[root@xiezhr dir5]# ll
total 0
-rw-r--r-- 1 root root 0 Mar 18 20:47 xie_20220315.jpg
-rw-r--r-- 1 root root 0 Mar 18 20:47 xie_20220316.jpg
-rw-r--r-- 1 root root 0 Mar 18 20:47 xie_20220317.jpg
-rw-r--r-- 1 root root 0 Mar 18 20:47 xie_20220318.jpg
-rw-r--r-- 1 root root 0 Mar 18 20:47 xie_20220319.jpg
</code></pre>
<h3 id="file-显示文件类型">file 显示文件类型</h3>
<p>1、简介</p>
<p>file 我们都知道是文件的意思。其作用就是用于显示文件类型。</p>
<p>2、语法格式</p>
<pre><code class="language-shell">file [参数选项] [文件或目录]
</code></pre>
<p>3、参数说明</p>
<p>一般不加参数</p>
<p>4、实践操作</p>
<pre><code class="language-shell">[root@xiezhr dir5]# file xie_20220315.jpg 
xie_20220315.jpg: empty
</code></pre>
<h3 id="md5sum-计算和校验文件的md5值">md5sum 计算和校验文件的MD5值</h3>
<p>1、简介</p>
<p>md5sum 用于计算和校验文件的MD5值。世界上没有完全相同的两片叶子，md5是一种不可逆的加密算法。我们可以通过比较两个文件的md5值来判断文件有没有被修改过。</p>
<p>2、语法格式</p>
<pre><code class="language-shell">md5 [参数选项] [文件]
</code></pre>
<p>3、参数说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-c</td>
<td>从指定文件中读取MD5校验值，并进行校验</td>
</tr>
</tbody>
</table>
<p>4、实践操作</p>
<p>① 生成一个文件的md5值</p>
<pre><code class="language-shell">[root@xiezhr test]# md5sum a.txt 
d41d8cd98f00b204e9800998ecf8427e  a.txt
</code></pre>
<p>②【-c】参数判断文件是否被篡改</p>
<p><strong>-c参数来对文件md5进行校验。校验时，根据已生成的md5来进行校验。生成当前文件的md5，并和之前已经生成的md5进行对比，如果一致则文件没被修改，如果不一致则文件被篡改了。</strong></p>
<pre><code class="language-shell">[root@xiezhr dir6]# ls
xiezhr.txt
[root@xiezhr dir6]# md5sum xiezhr.txt 
d41d8cd98f00b204e9800998ecf8427e  xiezhr.txt
[root@xiezhr dir6]# md5sum xiezhr.txt &gt;data.md5
[root@xiezhr dir6]# echo "个人公众号：XiezhrSpace" &gt;&gt; xiezhr.txt 
[root@xiezhr dir6]# md5sum xiezhr.txt 
8e32899aa04a3a842df366cdd883cdbf  xiezhr.txt
[root@xiezhr dir6]# md5sum -c data.md5 
xiezhr.txt: FAILED
md5sum: WARNING: 1 computed checksum did NOT match
</code></pre>
<p>这期内容就到这，下期根据思维导图就到了文件内容操作相关的命令使用了。</p>
<p>涉及到的命令有：cat、more、head、tail、less、cut、join、sort等等</p>
<p>敬请期待哦(●’◡’●)</p>
<p>专栏目录：<a href="https://blog.csdn.net/rong09_13/article/details/123303512" target="_blank" rel="noopener">快速上手Linux核心命令专栏目录</a></p>
<p>上一篇：<a href="https://blog.csdn.net/rong09_13/article/details/123319727" target="_blank" rel="noopener">快速上手Linux核心命令（二）：关机、重启</a></p>
<p>下一篇：<a href="https://blog.csdn.net/rong09_13/article/details/123765097" target="_blank" rel="noopener">快速上手Linux核心命令（四）：文件内容相关命令</a></p>

</div>
<div class="clear"></div>
<div id="blog_post_info_block" role="contentinfo">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date" data-last-update-days="0.07820084630208333" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2023-04-23 12:52">2023-04-23 12:52</span>&nbsp;
<a href="https://www.cnblogs.com/xiezhr/">xiezhr</a>&nbsp;
阅读(<span id="post_view_count">98</span>)&nbsp;
评论(<span id="post_comment_count">1</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17343212" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(17343212);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '17343212', targetLink: 'https://www.cnblogs.com/xiezhr/p/17343212.html', title: '快速上手Linux核心命令（三）：文件和目录操作命令' })">举报</a>
</div>
        </div>
        
<script>
    var cb_entryId = 17343212, cb_entryCreatedDate = '2023-04-23 12:52', cb_postType = 1, cb_postTitle = '快速上手Linux核心命令（三）：文件和目录操作命令';
    var allowComments = true, cb_blogId = 685650, cb_blogApp = 'xiezhr', cb_blogUserGuid = '01a00d82-1837-40b5-d183-08d90acd9f5d';
    mermaidRender.render()
    markdown_highlight()
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
    updatePostStats(
            [cb_entryId],
            function(id, count) { $("#post_view_count").text(count) },
            function(id, count) { $("#post_comment_count").text(count) })
</script>
        <a id="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
        <div id="cnblogs_ch"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
            <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
        var commentManager = new blogCommentManager();
        commentManager.renderComments(0);
        fixPostBody();
        window.footnoteTipManager.generateFootnoteTips();

            window.tocManager.displayDisableTocTips = false;
            window.tocManager.generateToc();
            
                setTimeout(function() { countViews(cb_blogId, cb_entryId); }, 50);
            
            deliverT2();
            deliverC1C2();
            loadNewsAndKb();
            
                LoadPostCategoriesTags(cb_blogId, cb_entryId);
            
            LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
            GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
            loadOptUnderPost();
            GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
                </script>
</div>

    </div>
</div>
            </div>
        </div>

        <div id="sideBar">
            <div id="sideBarMain">
                <div id="sidebar_news" class="newsItem">
    
<h3 class="catListTitle">公告</h3>
<div id="blog-news">    
    <div id="sidebar_news_content">
    </div>
</div>
<script>loadBlogNews();</script> 
</div>
<div id="sidebar_c3"></div>
                <div id="calendar"><div id="blog-calendar" style="display:none"></div></div>                
                <script>loadBlogDefaultCalendar();</script>
                <div id="leftcontentcontainer">
                    <!-- begin:SingleColumn -->
                    <div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
                    <!-- end:  SingleColumn -->
                </div>
            </div>
        </div>
        <div class="clear"></div>
    </div>
    <div class="clear"></div>
    <div id="footer">
        <!--done-->
Copyright &copy; 2023 xiezhr
<br /><span id="poweredby">Powered by .NET 7.0 on Kubernetes</span>

    </div>
</div>


    

    <input type="hidden" id="antiforgery_token" value="CfDJ8M-opqJn5c1MsCC_BxLIULko-5paB3U1714Ab3fQqabQircZPJzc_0e8rtMNaiQhZY7zEP6Z-lMHRWk0D3Vdv0Vm9vottyiNROPzvtEh9k9XDNJFmJT0vFAc2uHdzRMy5uKLd1V1_2xVxR1DUPQ4GK8" />
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-476124-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    var kv = getGACustom();
    if (kv) {
        gtag('set', kv);
    }
    gtag('config', 'UA-476124-1');
</script>
<script defer src="https://hm.baidu.com/hm.js?866c9be12d4a814454792b1fd0fed295"></script>
</body>
</html>