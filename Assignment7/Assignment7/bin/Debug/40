<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-cross-origin" />
    <meta name="description" content="在参照一些行业系统软件的时候，发现一个做的挺不错的系统功能-系统参数管理，相当于把任何一个基础的系统参数碎片化进行管理，每次可以读取一个值进行管理，这样有利于我们快速的处理业务需求，是一个挺好的功能。" />
    <meta property="og:description" content="在参照一些行业系统软件的时候，发现一个做的挺不错的系统功能-系统参数管理，相当于把任何一个基础的系统参数碎片化进行管理，每次可以读取一个值进行管理，这样有利于我们快速的处理业务需求，是一个挺好的功能。" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>基于SqlSugar的开发框架循序渐进介绍（28）-- 快速构建系统参数管理界面 - 伍华聪 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=1vhSwkIM_ZbH7FoBJEmvwqf4uVSvVLle9uQMPlPtd_s" />
    

    <link id="MainCss" rel="stylesheet" href="/skins/anothereon001/bundle-anothereon001.min.css?v=1yg9KIl2uqPgFl1nHJo7XpSmdsw2-TBVdqxb4st_cPo" />
        <link id="highlighter-theme-cnblogs" type="text/css" rel="stylesheet" href="/css/hljs/cnblogs.css?v=5J1NDtbnnIr2Rc2SdhEMlMxD4l9Eydj88B31E7_NhS4" />
    
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/anothereon001/bundle-anothereon001-mobile.min.css?v=OLRBqIn3rhmdWE-w2_UjmiVXry7PEJQ8ZsJiAQdBsVk" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/wuhuacong/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/wuhuacong/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/wuhuacong/wlwmanifest.xml" />
    <script>
        var currentBlogId = 12391;
        var currentBlogApp = 'wuhuacong';
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'AnotherEon001';
        var visitorUserId = '';
        var hasCustomScript = false;
        try {
            if (hasCustomScript && document.referrer && document.referrer.indexOf('baidu.com') >= 0) {
                Object.defineProperty(document, 'referrer', { value: '' });
                Object.defineProperty(Document.prototype, 'referrer', { get: function () { return ''; } });
            }
        } catch (error) { }
        window.cb_enable_mathjax = false;
        window.mathEngine = 0;
        window.codeHighlightEngine = 1;
        window.enableCodeLineNumber = false;
        window.codeHighlightTheme = 'cnblogs';
        window.darkModeCodeHighlightTheme = 'vs2015';
        window.isDarkCodeHighlightTheme = false;
        window.isDarkModeCodeHighlightThemeDark = true;
        window.isDisableCodeHighlighter = false;
        window.enableCodeThemeTypeFollowSystem = false;
        window.enableMacStyleCodeBlock = false
    </script>
        <script>
            var currentPostDateAdded = '2023-04-23 12:45';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=QEG6LwSL2qZPG7UFsn5haCBlDMZ9Yzj6bWHw2T_YuXU"></script>
    

    
</head>
<body class="skin-anothereon001 has-navbar">
    <a name="top"></a>
        <div id="bannerbar" class="bannerbar-mobile bannerbar-text-mobile formobile">
                <a href="https://www.cnblogs.com/cmt/p/17320765.html" onclick="countCreativeClicks('M2-博客园')">
                    园子的商业化努力-困境求助：开设捐助通道
                </a>                
        </div>
    <div id="top_nav" class="navbar forpc">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding">
                    <a href="https://www.cnblogs.com/" title="开发者的网上家园" role="banner">
                            <img src="//common.cnblogs.com/logo.svg" alt="博客园Logo" />
                    </a>
                </li>
                <li>
                    <a href="/" onclick="countClicks('skin-navbar-sitehome')">首页</a>
                </li>
                <li>
                    <a href="https://news.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-news')">新闻</a>
                </li>
                <li>
                    <a href="https://q.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-q')">博问</a>
                </li>
                    <li><a href="https://www.cnblogs.com/cmt/p/17320765.html" target="_blank">助园</a></li>
                <li>
                    <a href="https://ing.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-ing')">闪存</a>
                </li>
                <li>
                    <a href="https://edu.cnblogs.com/" onclick="countClicks('nav', 'skin-navbar-edu')">班级</a>
                </li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search dropdown" action="https://zzk.cnblogs.com/s" method="get" role="search">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="search" tabindex="3" autocomplete="off" />
                        <button id="zzk_search_button" onclick="window.navbarSearchManager.triggerActiveOption()">
                            <img id="search_icon" class="focus-hidden" src="//common.cnblogs.com/images/blog/search.svg" alt="搜索" />
                            <img class="hidden focus-visible" src="/images/enter.svg" alt="搜索" />
                        </button>
                        <ul id="navbar_search_options" class="dropdown-menu quick-search-menu">
                            <li tabindex="0" class="active" onclick="zzkSearch(event, document.getElementById('zzk_search_input').value)">
                                <div class="keyword-wrapper">
                                    <img src="//common.cnblogs.com/images/blog/search.svg" alt="搜索" />
                                    <div class="keyword"></div>
                                </div>
                                <span class="search-area">所有博客</span>
                            </li>
                                    <li tabindex="1" onclick="zzkBlogSearch(event, 'wuhuacong', document.getElementById('zzk_search_input').value)">
                                        <div class="keyword-wrapper">
                                            <img src="//common.cnblogs.com/images/blog/search.svg" alt="搜索" />
                                            <div class="keyword"></div>
                                        </div>
                                        <span class="search-area">当前博客</span>
                                    </li>
                        </ul>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="//common.cnblogs.com/images/blog/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="//common.cnblogs.com/images/blog/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="//common.cnblogs.com/images/blog/message.svg" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <a id="navbar_lite_mode_indicator" data-current-page="blog" style="display: none" href="javascript:void(0)" alt="简洁模式" title="简洁模式启用，您在访问他人博客时会使用简洁款皮肤展示">
                        <img class="navbar-icon" src="//common.cnblogs.com/images/blog/lite-mode-on.svg" alt="简洁模式" />
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="//common.cnblogs.com/images/blog/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    

    <div id="wrapper">
    <div id="header">
        
<div id="top">
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/wuhuacong/">wuhuacong(伍华聪)的专栏</a>
</h1>
<div id="subtitle"></div>
</div>
<div id="sub"><div id="blog_stats_place_holder"><script>loadBlogStats();</script></div></div>




    </div>
    <div id="main_container">
        <div id="main_content">
            <div id="content">
                <div id="post_detail">
    <div class="post">
        <h2>
            
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/17346092.html">
    <span role="heading" aria-level="2">基于SqlSugar的开发框架循序渐进介绍（28）-- 快速构建系统参数管理界面</span>
    
</a>

        </h2>
        <div class="postbody">
                <div id="cnblogs_post_description" style="display: none">
        
        在参照一些行业系统软件的时候，发现一个做的挺不错的系统功能-系统参数管理，相当于把任何一个基础的系统参数碎片化进行管理，每次可以读取一个值进行管理，这样有利于我们快速的处理业务需求，是一个挺好的功能。本篇随笔模拟这个功能，基于SqlSugar开发框架的基础上，利用代码生成工具快速生成系统参数管理界面和相关的业务类生成。
    </div>
<div id="cnblogs_post_body" class="blogpost-body blogpost-body-html">
<p>在参照一些行业系统软件的时候，发现一个做的挺不错的系统功能-系统参数管理，相当于把任何一个基础的系统参数碎片化进行管理，每次可以读取一个值进行管理，这样有利于我们快速的处理业务需求，是一个挺好的功能。本篇随笔模拟这个功能，基于SqlSugar开发框架的基础上，利用代码生成工具快速生成系统参数管理界面和相关的业务类生成。</p>
<h3>1、参考和具体实现的效果对比</h3>
<p>参照的界面效果如下所示。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423114039743-1551216726.png" alt="" width="620" height="444" loading="lazy"></p>
<p>最终基于SqlSugar的开发框架，基于DevExpress的界面效果，构建的Winform界面如下所示。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423115525978-253608017.png" alt="" width="651" height="403" loading="lazy"></p>
<h3>2、&nbsp;快速构建系统参数管理界面及后台业务代码</h3>
<p>为了实现业务代码及UI界面的内容生成，我们首先要设计好数据库，基于数据库表，可以利用<a href="https://www.iqidi.com/database2sharp.htm" target="_blank" rel="noopener">代码生成工具Database2Sharp</a> 快速生成相关的业务代码和Winform界面代码。</p>
<p>系统参数的信息，应该设计为包含一个大类参数目录和一个具体的参数项目，如下基于SQLServer的数据库表设计所示（基于PoweDesigner设计，便于生成Sql执行）。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423120210628-618268665.png" alt="" width="270" height="407" loading="lazy"></p>
<p>其中大类目录如下设计所示，为了方便，设计为一个树形结构的层次。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423120349306-1667061085.png" alt="" width="577" height="176" loading="lazy"></p>
<p>参数项目表设计如下所示。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423120531066-1246484131.png" alt="" width="624" height="208" loading="lazy"></p>
<p>生成相关的Sql ，在数据库中构建好相关的表结构。</p>
<p>然后利用代码生成工具生成相关的代码即可。</p>
<p>打开代码生成工具，并展开相关的数据库表，由于我们选择基于SqlSugar开发框架架构进行的界面生成，因此选择对应的界面生成【<strong>SqlSugar框架Winform界面生成</strong>】。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423121421200-1248609662.png" alt="" width="866" height="335" loading="lazy"></p>
<p>&nbsp;在弹出的【常规Winform界面生成】面板中，勾选相关的设置信息，定制UI界面，如下界面效果所示。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423121650181-2099285715.png" alt="" width="817" height="678" loading="lazy"></p>
<p>&nbsp;利用代码生成工具，默认会生成一个类似下面的设计窗体的界面效果。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423120810461-596884715.png" alt="" width="543" height="385" loading="lazy"></p>
<p>&nbsp;为了能够展示多层级的参数目录，我们需要在左侧模仿做一个树形列表，这样才能更好的查看相关的参数信息，相当于把参数项目分类管理。</p>
<p>因此我们在生成的窗体界面上，增加SplitContainerControl的一个拆分面板区域的控件，并把左侧放置树形列表及查询框，如下界面效果。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423121040697-2019755192.png" alt="" width="790" height="414" loading="lazy"></p>
<p>&nbsp;</p>
<h3>3、快速构建系统参数管理的后台业务代码</h3>
<p>上面介绍的是Winform的界面生成，为了使得系统能够顺利的跑起来，我们还需要对相关的系统参数表目录和项目访问所需的业务代码，一般的业务代码都需要有CRUD等常规操作的代码，不过还好基于框架的基础上，我们只需要生成一个简单的类，继承自基类就默认具有了这些操作，不需要重复编写代码，简化了代码的处理并提高开发效率。</p>
<p>同样的，我们利用现有表结构信息，基于代码生成工具快是生成相关的业务类文件，合并到系统框架中就可以了。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423122039333-386536552.png" alt="" width="805" height="633" loading="lazy"></p>
<p>选择两个刚创建的表：TB_SystemParams 、TB_SystemParamsDir，并填写对应的主命名空间，如下所示。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423122248615-1469048033.png" alt="" width="571" height="434" loading="lazy"></p>
<p>&nbsp;最后生成的代码文件如下所示。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423122520350-64578216.png" alt="" width="540" height="259" loading="lazy"></p>
<p>由于是基于框架的目录机构生成的，因此直接复制Core目录到解决方案项目上就可以了，如下所示。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423122633916-1045574251.png" alt="" loading="lazy"></p>
<p>复制过去后，对应业务表的实体类、接口类、实现类都一一设置好了相关的继承关系，如下是具体业务实现类的代码，是基于数据库表结构信息生成的。</p>
<div class="cnblogs_code">
<pre>    <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
    <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 系统参数配置 应用层服务接口实现
    </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
    <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span> <strong><span style="color: rgba(255, 0, 0, 1)">SystemParamsService</span> </strong>: <span style="color: rgba(255, 0, 0, 1)"><strong>MyCrudService</strong></span>&lt;SystemParamsInfo,<span style="color: rgba(0, 0, 255, 1)">string</span>, SystemParamsPagedDto&gt;<span style="color: rgba(0, 0, 0, 1)">, ISystemParamsService
  {
       </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">相关代码</span>
  }</pre>
</div>
<p>详细类文件如下所示，生成了相关的排序条件、查询条件等处理信息。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423122927673-2139792383.png" alt="" width="1033" height="836" loading="lazy"></p>
<p>&nbsp;由于这个系统界面比较简单，因此我们不需要增加任何代码。</p>
<p>我们再次回到UI界面的处理上来，由于默认我们生成的界面，都具有了分页查询及编辑明细的功能，因此这部分代码我们不需要调整，我们额外增加了树展示和过滤的功能，因此需要适当修改一下生成的界面代码。</p>
<p>窗体界面的处理主逻辑如下所示。</p>
<div class="cnblogs_code">
<pre>        <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 编写初始化窗体的实现，可以用于刷新
        </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">override</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> FormOnLoad()
        {
<span style="color: rgba(255, 0, 0, 1)"><strong>            InitSearchControl();
            InitTree();
            BindTree();</strong></span>

            InitDictItem();
            BindData();
        }</span></pre>
</div>
<p>标注红色的部分是我们需要额外增加的代码。</p>
<p>初始化树的界面代码如下所示，主要的逻辑就是创建显示的列，以及确定好层次关系和实现拖动效果处理，以及对选中节点的事件处理。</p>
<div class="cnblogs_code">
<pre>      <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 初始化树控件
        </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> InitTree()
        {
            </span><span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">.tree.Columns.Clear();

            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">控件扩展函数封装处理</span>
            <span style="color: rgba(0, 0, 255, 1)">this</span>.tree.CreateColumn(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">CategoryName</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">系统参数目录</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(128, 0, 128, 1)">160</span>, <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 0, 255, 1)">this</span>.tree.InitTree(Id_FieldName, <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">PID</span><span style="color: rgba(128, 0, 0, 1)">"</span>, <span style="color: rgba(0, 0, 255, 1)">null</span>, <span style="color: rgba(0, 0, 255, 1)">false</span>, <span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">);
            </span><span style="color: rgba(0, 0, 255, 1)">this</span>.tree.OptionsDragAndDrop.DragNodesMode =<span style="color: rgba(0, 0, 0, 1)"> DragNodesMode.Single;

            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">设置树的图标集合及逐级图标</span>
            <span style="color: rgba(0, 0, 255, 1)">this</span>.tree.SelectImageList = <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">.imageList1;
            </span><span style="color: rgba(0, 0, 255, 1)">this</span>.tree.CustomDrawNodeImages += (<span style="color: rgba(0, 0, 255, 1)">object</span> sender, CustomDrawNodeImagesEventArgs e) =&gt;<span style="color: rgba(0, 0, 0, 1)">
            {
                </span><span style="color: rgba(0, 0, 255, 1)">int</span> maxCount = <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">.imageList1.Images.Count;
                </span><span style="color: rgba(0, 0, 255, 1)">var</span> index = e.Node.Level &lt; maxCount ? e.Node.Level : <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;
                e.SelectImageIndex </span>=<span style="color: rgba(0, 0, 0, 1)"> index;
            };

            </span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">初始化树节点选择事件</span>
            <span style="color: rgba(0, 0, 255, 1)">this</span>.tree.FocusedNodeChanged += <span style="color: rgba(0, 0, 255, 1)">delegate</span> (<span style="color: rgba(0, 0, 255, 1)">object</span><span style="color: rgba(0, 0, 0, 1)"> sender, FocusedNodeChangedEventArgs e)
            {
                </span><span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">.FocusedNodeChanged();
            };
            </span><span style="color: rgba(0, 0, 255, 1)">this</span>.tree.MouseDoubleClick += (s, e) =&gt; { menu_EditType_Click(<span style="color: rgba(0, 0, 255, 1)">null</span>, <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">); };
        }</span></pre>
</div>
<p>而对于树节点的过滤，我们对查询的输入框架进行如下处理代码即可。</p>
<div class="cnblogs_code">
<pre>        <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 实现树节点的过滤查询
        </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> InitSearchControl()
        {
            </span><span style="color: rgba(0, 0, 255, 1)">this</span>.searchControl1.Client = <span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">.tree;
            </span><span style="color: rgba(0, 0, 255, 1)">this</span>.tree.FilterNode += (<span style="color: rgba(0, 0, 255, 1)">object</span> sender, FilterNodeEventArgs e) =&gt;<span style="color: rgba(0, 0, 0, 1)">
            {
                </span><span style="color: rgba(0, 0, 255, 1)">if</span> (tree.DataSource == <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)
                    </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)">;

                </span><span style="color: rgba(0, 0, 255, 1)">string</span> nodeText = e.Node.GetDisplayText(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(255, 0, 0, 1)"><strong>CategoryName</strong></span><span style="color: rgba(128, 0, 0, 1)">"</span>);<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">参数填写FieldName  </span>
                <span style="color: rgba(0, 0, 255, 1)">if</span> (<span style="color: rgba(0, 0, 255, 1)">string</span><span style="color: rgba(0, 0, 0, 1)">.IsNullOrWhiteSpace(nodeText))
                    </span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)">;

                </span><span style="color: rgba(0, 0, 255, 1)">bool</span> isExist = nodeText.IndexOf(searchControl1.Text, StringComparison.OrdinalIgnoreCase) &gt;= <span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;
                </span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (isExist)
                {
                    </span><span style="color: rgba(0, 0, 255, 1)">var</span> node =<span style="color: rgba(0, 0, 0, 1)"> e.Node.ParentNode;
                    </span><span style="color: rgba(0, 0, 255, 1)">while</span> (node != <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)
                    {
                        </span><span style="color: rgba(0, 0, 255, 1)">if</span> (!<span style="color: rgba(0, 0, 0, 1)">node.Visible)
                        {
                            node.Visible </span>= <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">;
                            node </span>=<span style="color: rgba(0, 0, 0, 1)"> node.ParentNode;
                        }
                        </span><span style="color: rgba(0, 0, 255, 1)">else</span>
                            <span style="color: rgba(0, 0, 255, 1)">break</span><span style="color: rgba(0, 0, 0, 1)">;
                    }
                }
                e.Node.Visible </span>=<span style="color: rgba(0, 0, 0, 1)"> isExist;
                e.Handled </span>= <span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">;
            };
        }</span></pre>
</div>
<p>触发树节点查询，以及绑定树数据源的处理如下代码所示</p>
<div class="cnblogs_code">
<pre>        <span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 选中树节点触发的查询处理
        </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> FocusedNodeChanged()
        {
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (<span style="color: rgba(0, 0, 255, 1)">this</span>.tree.FocusedNode != <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)
            {
                BindData();
            }
        }
        </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span>
        <span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> 绑定树的数据源
        </span><span style="color: rgba(128, 128, 128, 1)">///</span> <span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span>
        <span style="color: rgba(0, 0, 255, 1)">private</span> <span style="color: rgba(0, 0, 255, 1)">async</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> BindTree()
        {
            </span><span style="color: rgba(0, 0, 255, 1)">var</span> result = <span style="color: rgba(0, 0, 255, 1)">await</span> <strong><span style="color: rgba(255, 0, 0, 1)">BLLFactory&lt;ISystemParamsDirService&gt;</span></strong><span style="color: rgba(0, 0, 0, 1)"><strong><span style="color: rgba(255, 0, 0, 1)">.Instance.GetAllAsync()</span></strong>;
            </span><span style="color: rgba(0, 0, 255, 1)">if</span> (result != <span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">)
            {
                </span><span style="color: rgba(0, 0, 255, 1)">this</span>.tree.DataSource =<span style="color: rgba(0, 0, 0, 1)"> result.Items;
                </span><span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)">.tree.ExpandAll();
            }
        }</span></pre>
</div>
<p>其中数据源的获取，我们直接调用基类函数获取对应的列表项目就可以了，如上的代码</p>
<div class="cnblogs_code">
<pre>BLLFactory&lt;<span style="color: rgba(255, 0, 0, 1)"><strong>ISystemParamsDirService</strong></span>&gt;.Instance.<span style="color: rgba(255, 0, 0, 1)"><strong>GetAllAsync</strong></span>();</pre>
</div>
<p>对于编辑参数明细的界面项目，我们如果需要微调界面，修改下即可。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423123957875-654413165.png" alt="" width="437" height="335" loading="lazy"></p>
<p>&nbsp;到此功能基本就完成了，整合编译运行就可以出效果了。构建的Winform界面如下所示。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423115525978-253608017.png" alt="" width="651" height="403" loading="lazy"></p>
<p>编辑明细部分的界面效果如下所示。</p>
<p><img src="https://img2023.cnblogs.com/blog/8867/202304/8867-20230423124413453-1510998255.png" alt="" width="805" height="427" loading="lazy"></p>
<p>&nbsp;以上就是基于SqlSugar开发框架的基础上，利用代码生成工具快速生成系统参数管理界面和相关的业务类生成的全部过程，希望对大家开发处理有所裨益。</p>
<p>&nbsp;</p>
<p>SqlSugar开发框架介绍：<a href="https://www.iqidi.com/Framework/sugarIndex.htm" rel="noopener" target="_blank">https://www.iqidi.com/Framework/sugarIndex.htm</a>&nbsp;</p>
<p>系列文章：</p>
<p>《<a href="https://www.cnblogs.com/wuhuacong/p/16269515.html" rel="noopener" target="_blank">基于SqlSugar的开发框架的循序渐进介绍（1）--框架基础类的设计和使用</a>》</p>
<p>《<a class="post-item-title" href="https://www.cnblogs.com/wuhuacong/p/16270436.html" rel="noopener" target="_blank">基于SqlSugar的开发框架循序渐进介绍（2）-- 基于中间表的查询处理</a>》</p>
<p>《<a id="PostsList1_rpPosts_TitleUrl_1" class="vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/16270542.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（3）-- 实现代码生成工具Database2Sharp的整合开发</a>》</p>
<p>《<a id="PostsList1_rpPosts_TitleUrl_1" class="vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/16277426.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（4）-- 在数据访问基类中对GUID主键进行自动赋值处理&nbsp;</a>》</p>
<p>《<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/16304615.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（5）-- 在服务层使用接口注入方式实现IOC控制反转</a>》</p>
<p>《<a id="PostsList1_rpPosts_TitleUrl_1" class="vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/16305022.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（6）-- 在基类接口中注入用户身份信息接口&nbsp;</a>》</p>
<p>《<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/16370422.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（7）-- 在文件上传模块中采用选项模式【Options】处理常规上传和FTP文件上传</a>》</p>
<p>&nbsp;《<a class="postTitle2 vertical-middle pinned-post" href="https://www.cnblogs.com/wuhuacong/p/16371025.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（8）-- 在基类函数封装实现用户操作日志记录</a>》</p>
<p>《<a id="PostsList1_rpPosts_TitleUrl_1" class="vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/16400608.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（9）-- 结合Winform控件实现字段的权限控制</a>》</p>
<p>《<a class="postTitle2 vertical-middle pinned-post" href="https://www.cnblogs.com/wuhuacong/p/16453917.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（10）-- 利用axios组件的封装，实现对后端API数据的访问和基类的统一封装处理</a>》</p>
<p>《<a id="PostsList1_rpPosts_TitleUrl_2" class="vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/16454236.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（11）-- 使用TypeScript和Vue3的Setup语法糖编写页面和组件的总结</a>》</p>
<p>《<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/16501436.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（12）-- 拆分页面模块内容为组件，实现分而治之的处理</a>》</p>
<p>《<a class="postTitle2 vertical-middle pinned-post" href="https://www.cnblogs.com/wuhuacong/p/16517834.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（13）-- 基于ElementPlus的上传组件进行封装，便于项目使用</a>》</p>
<p>《<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/16735031.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（14）-- 基于Vue3+TypeScript的全局对象的注入和使用</a>》</p>
<p>&nbsp;《<a class="postTitle2 vertical-middle pinned-post" href="https://www.cnblogs.com/wuhuacong/p/16788557.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（15）-- 整合代码生成工具进行前端界面的生成</a>》</p>
<p>《<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/16801700.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（16）-- 工作流模块的功能介绍</a>》</p>
<p>《<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/16834843.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（17）-- 基于CSRedis实现缓存的处理</a>》</p>
<p>&nbsp;《<a class="postTitle2 vertical-middle pinned-post" href="https://www.cnblogs.com/wuhuacong/p/16835203.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（18）-- 基于代码生成工具Database2Sharp，快速生成Vue3+TypeScript的前端界面和Winform端界面</a>》</p>
<p>《<a id="PostsList1_rpPosts_TitleUrl_1" class="vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/16843851.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（19）-- 基于UniApp+Vue的移动前端的功能介绍</a>》</p>
<p>《<a class="postTitle2 vertical-middle pinned-post" href="https://www.cnblogs.com/wuhuacong/p/16844606.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（20）-- 在基于UniApp+Vue的移动端实现多条件查询的处理</a>》</p>
<p>《<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/16879792.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（21）-- 在工作流列表页面中增加一些转义信息的输出，在后端进行内容转换</a>》</p>
<p>&nbsp;《<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/16898897.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（22）-- Vue3+TypeScript的前端工作流模块中实现统一的表单编辑和表单详情查看处理&nbsp;</a>》</p>
<p>《<a id="PostsList1_rpPosts_TitleUrl_2" class="vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/17002898.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（23）-- Winform端管理系统中平滑增加对Web API对接的需求</a>》</p>
<p>《<a id="PostsList1_rpPosts_TitleUrl_1" class="vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/17006100.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（24）-- 使用Serialize.Linq对Lambda表达式进行序列化和反序列化&nbsp;</a>》</p>
<p>&nbsp;<a id="PostsList1_rpPosts_TitleUrl_2" class="vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/17296926.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（25）-- 基于SignalR实现多端的消息通讯</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_1" class="vertical-middle" href="https://www.cnblogs.com/wuhuacong/p/17302362.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（26）-- 实现本地上传、FTP上传、阿里云OSS上传三者合一处理</a></p>
<p><a class="postTitle2 vertical-middle pinned-post" href="https://www.cnblogs.com/wuhuacong/p/17314207.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（27）-- 基于MongoDB的数据库操作整合</a></p>
<p><a class="postTitle2 vertical-middle pinned-post" href="https://www.cnblogs.com/wuhuacong/p/17346092.html" rel="noopener">基于SqlSugar的开发框架循序渐进介绍（28）-- 快速构建系统参数管理界面</a></p>
<p>&nbsp;</p>
</div>
<div id="MySignature" role="contentinfo">
    <div style="border-right-color: #cccccc; border-right-width: 1px; border-right-style: solid; padding-right: 5px; border-top-color: #cccccc; border-top-width: 1px; border-top-style: solid; padding-left: 4px; font-size: 13px; padding-bottom: 4px; border-left-color: #cccccc; border-left-width: 1px; border-left-style: solid; width: 98%; padding-top: 4px; border-bottom-color: #cccccc; border-bottom-width: 1px; border-bottom-style: solid; background-color: #eeeeee;">
    <img src="http://www.cnblogs.com/Images/OutliningIndicators/None.gif" align="top" alt>
    <span style="color: #000000"><span class="Apple-tab-span" style="white-space: pre"></span>
     专注于代码生成工具、.Net/.NetCore 框架架构及软件开发，以及各种Vue.js的前端技术应用。著有Winform开发框架/混合式开发框架、微信开发框架、Bootstrap开发框架、ABP开发框架、SqlSugar开发框架等框架产品。
     <br>  转载请注明出处：撰写人：伍华聪  <a href="http://www.iqidi.com/" target="_blank">http://www.iqidi.com</a> <br>    </span></div>
</div>
<div class="clear"></div>
<div id="blog_post_info_block" role="contentinfo">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
        </div>
        <p class="postfoot">
            posted on 
<span id="post-date" data-last-update-days="0.08236961797222223" data-date-created="BlogServer.Application.Dto.BlogPost.BlogPostDto" data-date-updated="2023-04-23 12:46">2023-04-23 12:45</span>&nbsp;
<a href="https://www.cnblogs.com/wuhuacong/">伍华聪</a>&nbsp;
阅读(<span id="post_view_count">52</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=17346092" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(17346092);return false;">收藏</a>&nbsp;
<a href="javascript:void(0)" onclick="reportManager.report({ currentUserId: '', targetType: 'blogPost', targetId: '17346092', targetLink: 'https://www.cnblogs.com/wuhuacong/p/17346092.html', title: '基于SqlSugar的开发框架循序渐进介绍（28）-- 快速构建系统参数管理界面' })">举报</a>

        </p>
    </div>
</div>


<script>
    var cb_entryId = 17346092, cb_entryCreatedDate = '2023-04-23 12:45', cb_postType = 1, cb_postTitle = '基于SqlSugar的开发框架循序渐进介绍（28）-- 快速构建系统参数管理界面';
    var allowComments = true, cb_blogId = 12391, cb_blogApp = 'wuhuacong', cb_blogUserGuid = '689f310b-63cf-dd11-9e4d-001cf0cd104b';
    mermaidRender.render()
    markdown_highlight()
    zoomManager.apply("#cnblogs_post_body img:not(.code_img_closed):not(.code_img_opened)");
    updatePostStats(
            [cb_entryId],
            function(id, count) { $("#post_view_count").text(count) },
            function(id, count) { $("#post_comment_count").text(count) })
</script>
<a id="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
        <div id="cnblogs_ch"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="under-post-card">
            <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_card1"></div>
    <div id="under_post_card2"></div>
    <div id="HistoryToday" class="under-post-card"></div>
    <script type="text/javascript">
        var commentManager = new blogCommentManager();
        commentManager.renderComments(0);
        fixPostBody();
        window.footnoteTipManager.generateFootnoteTips();

            window.tocManager.displayDisableTocTips = false;
            window.tocManager.generateToc();
            
                setTimeout(function() { countViews(cb_blogId, cb_entryId); }, 50);
            
            deliverT2();
            deliverC1C2();
            loadNewsAndKb();
            
                LoadPostCategoriesTags(cb_blogId, cb_entryId);
            
            LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
            GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
            loadOptUnderPost();
            GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
                </script>
</div>



            </div>
        </div>
        <div id="leftmenu">
            
<h3>导航</h3>
<ul>
    <li>
        <a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>

    </li>
    <li>
        
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/wuhuacong/">
首页</a>

    </li>
    <li>
        

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>

    </li>
    <li>
        
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E4%BC%8D%E5%8D%8E%E8%81%AA">
联系</a>
    </li>
    <li>
        
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/wuhuacong/rss/">
订阅</a>
        
<a id="blog_nav_rss_image" href="https://www.cnblogs.com/wuhuacong/rss/">
    <img src="/skins/anothereon001/images/xml.gif" alt="订阅" />
</a>
    </li>
    <li>
        
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>

    </li>
</ul>


            <div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
            <div id="sidebar_news" class="newsItem">
    <meta name="vs_showGrid" content="False" />
<h3>公告</h3>
<div id="blog-news">    
    <div id="sidebar_news_content">
    </div>
</div>
<script>loadBlogNews();</script>

 
</div>
<div id="sidebar_c3"></div>
            <div id="blog-sidecolumn"></div>
            <script>loadBlogSideColumn();</script>
        </div>
    </div>
    <div class="clear"></div>
    <div id="footer">
        <p id="footer">
	Powered by: 
	<br />
	
	<a href="https://www.cnblogs.com/" id="footer_site_link">博客园</a>
	<br />
	Copyright &copy; 2023 伍华聪
<br /><span id="poweredby">Powered by .NET 7.0 on Kubernetes</span>

</p>


    </div>
</div>



    

    <input type="hidden" id="antiforgery_token" value="CfDJ8M-opqJn5c1MsCC_BxLIULmWSaXTa4gzHk_H5od9KVi3XcRNn0b9hHviWq2UP3elKGLJzcGQf8Q6Z6KJ12lwMQLMn59EV5w77yTI-bcMlbHe_PyaTycpt4D1hwXol40j90KCbkTVL-zfFG2JTRVb0ms" />
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-476124-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    var kv = getGACustom();
    if (kv) {
        gtag('set', kv);
    }
    gtag('config', 'UA-476124-1');
</script>
<script defer src="https://hm.baidu.com/hm.js?866c9be12d4a814454792b1fd0fed295"></script>
</body>
</html>